{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\diploma\\\\movies-explorer-frontend\\\\src\\\\components\\\\Register\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport FormList from '../FormList/FormList';\nimport FormComponent from '../FormComponent/FormComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register(_ref) {\n  _s();\n\n  let {\n    registration\n  } = _ref;\n  // Стейт, в котором содержится значение инпута - name, mail, password\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState(''); // Обработчики изменения инпута обновляют стейт\n\n  function handleChangeName(e) {\n    setName(e.target.value);\n  }\n\n  function handleChangeEmail(e) {\n    setEmail(e.target.value);\n  }\n\n  function handleChangePassword(e) {\n    setPassword(e.target.value);\n  } //Отправляем данные на сервер\n\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault(); // Передаём значения управляемых компонентов во внешний обработчик\n\n    const datastartPage = {};\n    datastartPage.name = name;\n    datastartPage.email = email;\n    datastartPage.password = password;\n    registration(datastartPage);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormList, {\n      title: 'Добро пожаловать!',\n      name: 'Регистрация',\n      onSubmit: handleSubmit,\n      buttonText: 'Зарегистрироваться',\n      children: [/*#__PURE__*/_jsxDEV(FormComponent, {\n        name: 'Имя',\n        value: name,\n        onChange: handleChangeName,\n        minLength: '1',\n        maxLength: '30',\n        required: true,\n        type: 'text',\n        nameInput: 'name'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormComponent, {\n        name: 'E-mail',\n        value: email,\n        onChange: handleChangeEmail,\n        minLength: '1',\n        maxLength: '30',\n        required: true,\n        type: 'text',\n        nameInput: 'Email'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormComponent, {\n        name: 'Пароль',\n        value: password,\n        onChange: handleChangePassword,\n        minLength: '4',\n        required: true,\n        type: 'password',\n        nameInput: 'password'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"FormList__button_span\",\n      children: [\"\\u0423\\u0436\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u044B?\", /*#__PURE__*/_jsxDEV(Link, {\n        className: \"FormList__button_link\",\n        to: \"/sign-up\",\n        children: \" \\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"y7AVIb+2dT29WONRxO7d74XBSmc=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/dev/diploma/movies-explorer-frontend/src/components/Register/Register.js"],"names":["React","useState","Link","FormList","FormComponent","Register","registration","name","setName","email","setEmail","password","setPassword","handleChangeName","e","target","value","handleChangeEmail","handleChangePassword","handleSubmit","preventDefault","datastartPage"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport FormList from '../FormList/FormList';\r\nimport FormComponent from '../FormComponent/FormComponent';\r\n\r\nfunction Register ({registration}) {\r\n    \r\n    // Стейт, в котором содержится значение инпута - name, mail, password\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    // Обработчики изменения инпута обновляют стейт\r\n\r\n    function handleChangeName(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleChangeEmail(e) {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    function handleChangePassword(e) {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n//Отправляем данные на сервер\r\n    function handleSubmit(e) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    e.preventDefault();\r\n    \r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    const datastartPage = {};\r\n    datastartPage.name = name;\r\n    datastartPage.email = email;\r\n    datastartPage.password = password;\r\n    registration(datastartPage);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <FormList\r\n                title = {'Добро пожаловать!'} name={'Регистрация'} \r\n                onSubmit={handleSubmit} buttonText = {'Зарегистрироваться'}\r\n            >\r\n                <FormComponent name = {'Имя'} value = {name} onChange = {handleChangeName}\r\n                    minLength = {'1'} maxLength = {'30'} required type = {'text'} nameInput ={'name'}\r\n                />\r\n                <FormComponent name = {'E-mail'} value = {email} onChange = {handleChangeEmail}\r\n                    minLength = {'1'} maxLength = {'30'} required type = {'text'} nameInput ={'Email'}\r\n                />\r\n                <FormComponent name = {'Пароль'} value = {password} onChange = {handleChangePassword}\r\n                    minLength = {'4'}  required type = {'password'} nameInput ={'password'}\r\n                />\r\n            </FormList>\r\n            <p className=\"FormList__button_span\">Уже зарегистрированы?\r\n                <Link className=\"FormList__button_link\" to='/sign-up'> Войти</Link>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}