{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { FieldContext } from '.';\nimport warning from \"rc-util/es/warning\";\nimport { HOOK_MARK } from './FieldContext';\nimport { useState, useContext, useEffect, useRef, useMemo } from 'react';\nimport { getNamePath, getValue } from './utils/valueUtil';\n\nfunction stringify(value) {\n  try {\n    return JSON.stringify(value);\n  } catch (err) {\n    return Math.random();\n  }\n}\n\nfunction useWatch() {\n  var dependencies = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var form = arguments.length > 1 ? arguments[1] : undefined;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var valueStr = useMemo(function () {\n    return stringify(value);\n  }, [value]);\n  var valueStrRef = useRef(valueStr);\n  valueStrRef.current = valueStr;\n  var fieldContext = useContext(FieldContext);\n  var formInstance = form || fieldContext;\n  var isValidForm = formInstance && formInstance._init; // Warning if not exist form instance\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning(isValidForm, 'useWatch requires a form instance since it can not auto detect from context.');\n  }\n\n  var namePath = getNamePath(dependencies);\n  var namePathRef = useRef(namePath);\n  namePathRef.current = namePath;\n  useEffect(function () {\n    // Skip if not exist form instance\n    if (!isValidForm) {\n      return;\n    }\n\n    var getFieldsValue = formInstance.getFieldsValue,\n        getInternalHooks = formInstance.getInternalHooks;\n\n    var _getInternalHooks = getInternalHooks(HOOK_MARK),\n        registerWatch = _getInternalHooks.registerWatch;\n\n    var cancelRegister = registerWatch(function (store) {\n      var newValue = getValue(store, namePathRef.current);\n      var nextValueStr = stringify(newValue); // Compare stringify in case it's nest object\n\n      if (valueStrRef.current !== nextValueStr) {\n        setValue(newValue);\n      }\n    }); // TODO: We can improve this perf in future\n\n    var initialValue = getValue(getFieldsValue(), namePathRef.current);\n    setValue(initialValue);\n    return cancelRegister;\n  }, // We do not need re-register since namePath content is the same\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  return value;\n}\n\nexport default useWatch;","map":{"version":3,"sources":["C:/dev/diploma/movies-explorer-frontend/node_modules/rc-field-form/es/useWatch.js"],"names":["_slicedToArray","FieldContext","warning","HOOK_MARK","useState","useContext","useEffect","useRef","useMemo","getNamePath","getValue","stringify","value","JSON","err","Math","random","useWatch","dependencies","arguments","length","undefined","form","_useState","_useState2","setValue","valueStr","valueStrRef","current","fieldContext","formInstance","isValidForm","_init","process","env","NODE_ENV","namePath","namePathRef","getFieldsValue","getInternalHooks","_getInternalHooks","registerWatch","cancelRegister","store","newValue","nextValueStr","initialValue"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { FieldContext } from '.';\nimport warning from \"rc-util/es/warning\";\nimport { HOOK_MARK } from './FieldContext';\nimport { useState, useContext, useEffect, useRef, useMemo } from 'react';\nimport { getNamePath, getValue } from './utils/valueUtil';\n\nfunction stringify(value) {\n  try {\n    return JSON.stringify(value);\n  } catch (err) {\n    return Math.random();\n  }\n}\n\nfunction useWatch() {\n  var dependencies = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var form = arguments.length > 1 ? arguments[1] : undefined;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var valueStr = useMemo(function () {\n    return stringify(value);\n  }, [value]);\n  var valueStrRef = useRef(valueStr);\n  valueStrRef.current = valueStr;\n  var fieldContext = useContext(FieldContext);\n  var formInstance = form || fieldContext;\n  var isValidForm = formInstance && formInstance._init; // Warning if not exist form instance\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning(isValidForm, 'useWatch requires a form instance since it can not auto detect from context.');\n  }\n\n  var namePath = getNamePath(dependencies);\n  var namePathRef = useRef(namePath);\n  namePathRef.current = namePath;\n  useEffect(function () {\n    // Skip if not exist form instance\n    if (!isValidForm) {\n      return;\n    }\n\n    var getFieldsValue = formInstance.getFieldsValue,\n        getInternalHooks = formInstance.getInternalHooks;\n\n    var _getInternalHooks = getInternalHooks(HOOK_MARK),\n        registerWatch = _getInternalHooks.registerWatch;\n\n    var cancelRegister = registerWatch(function (store) {\n      var newValue = getValue(store, namePathRef.current);\n      var nextValueStr = stringify(newValue); // Compare stringify in case it's nest object\n\n      if (valueStrRef.current !== nextValueStr) {\n        setValue(newValue);\n      }\n    }); // TODO: We can improve this perf in future\n\n    var initialValue = getValue(getFieldsValue(), namePathRef.current);\n    setValue(initialValue);\n    return cancelRegister;\n  }, // We do not need re-register since namePath content is the same\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  return value;\n}\n\nexport default useWatch;"]},"metadata":{},"sourceType":"module"}