{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\diploma\\\\movies-explorer-frontend\\\\src\\\\components\\\\Movies\\\\Movies.js\",\n    _s = $RefreshSig$();\n\nimport MoviesCard from '../MoviesCard/MoviesCard';\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\nimport { useState, useEffect } from 'react';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Movies(_ref) {\n  _s();\n\n  let {\n    onCardClick,\n    onCardLike,\n    onCardDelete,\n    onBookmarkClick,\n    isSavedCard\n  } = _ref;\n  const currentUser = useContext(CurrentUserContext);\n  const apiURL = 'https://api.nomoreparties.co/beatfilm-movies';\n  let moviesCount = 5;\n  let moviesAddCount = 2;\n\n  const onResize = () => {\n    if (window.innerWidth >= 1280) {\n      moviesCount = 12;\n      moviesAddCount = 3;\n    } else if (window.innerWidth >= 768) {\n      moviesCount = 8;\n      moviesAddCount = 2;\n    } else {\n      moviesCount = 5;\n      moviesAddCount = 2;\n    }\n  };\n\n  window.onresize = () => {\n    setTimeout(onResize, 1000);\n  };\n\n  onResize();\n  const [cards, setCards] = useState([]);\n  const [filteredCards, setFilteredCards] = useState([]);\n  const [shortCards, setShortCards] = useState(false);\n  const [query, setQuery] = useState('');\n  const [countFilms, setCountFilms] = useState(moviesCount);\n  const [addCountFilms, setAddCountFilms] = useState(moviesAddCount);\n  const [savedCards, setSavedCards] = useState([]);\n\n  const updateMovies = cards => {\n    setCards(cards);\n    localStorage.setItem('all_filtered_movies', JSON.stringify(cards));\n  };\n\n  const updateFilteredMovies = cards => {\n    setFilteredCards(cards);\n    localStorage.setItem('all_movies', JSON.stringify(cards));\n  };\n\n  const updateShortCards = shortCards => {\n    setCountFilms(moviesCount);\n    setShortCards(shortCards);\n    ;\n    localStorage.setItem('all_shortCards', JSON.stringify(shortCards));\n  };\n\n  const updateQuery = query => {\n    query = query.toLowerCase();\n    setQuery(query);\n    localStorage.setItem('all_query', query);\n  };\n\n  console.log(cards);\n  useEffect(() => {\n    const cards = JSON.parse(localStorage.getItem('all_movies') || '[]');\n    updateMovies(cards);\n    updateFilteredMovies(JSON.parse(localStorage.getItem('all_filtered_movies') || '[]'));\n    updateQuery(localStorage.getItem('all_query') || '');\n    updateShortCards(JSON.parse(localStorage.getItem('all_short_movies') || 'false'));\n\n    if (!cards.length) {\n      fetch(apiURL, {\n        method: 'GET',\n        headers: {\n          //'Accept': 'application/json',\n          'Content-Type': 'aplication/json'\n        }\n      })\n      /*.then((card) => {\r\n          const initialArray = card.map((item) => {\r\n              const imageURL = item.image ? item.image.url : \"\";\r\n              return {\r\n                  ...item,\r\n                  image: `https://api.nomoreparties.co${imageURL}`,\r\n                  trailer: item.trailerLink,\r\n              };\r\n          })\r\n      })*/\n      .then(res => res.json()).then(res => {\n        updateMovies(res);\n        updateFilteredMovies([]);\n      }).then(data => {\n        const savedArray = data.map(item => {\n          return { ...item,\n            id: item.movieId\n          };\n        });\n        localStorage.setItem(\"savedMovies\", JSON.stringify(savedArray));\n        setSavedCards(savedArray);\n      }).catch(() => {\n        localStorage.removeItem(\"savedMovies\");\n        /*setLoadingError(\r\n        \"Проблема с соединением или сервер недоступен. Пожалуйста, попробуйте ещё раз\"\r\n        );*/\n      });\n    } else {\n      //console.log({cards});\n      setCards(cards);\n    }\n\n    const filteredCards = JSON.parse(localStorage.getItem('filtered_all_movies') || '[]');\n\n    if (cards.length) {\n      setFilteredCards(filteredCards);\n    }\n\n    const shortCards = JSON.parse(localStorage.getItem('all_short_movies') || 'false');\n    setShortCards(shortCards);\n    setQuery(localStorage.getItem('all_query') || '');\n  }, []);\n\n  const handleSubmit = e => {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    if (query.length) {\n      const filteredCards = cards.filter(card => card.nameRU.toLowerCase().indexOf(query) >= 0);\n      updateFilteredMovies(filteredCards);\n    } else {\n      updateFilteredMovies(cards);\n    }\n  };\n\n  const addMovies = () => {\n    setCountFilms(countFilms + addCountFilms);\n  };\n\n  const searchResult = filteredCards.filter(card => !shortCards || card.duration <= 40);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"Movies__search\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Movies__search_fa\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"Movies__search-field\",\n            placeholder: \"\\u0424\\u0438\\u043B\\u044C\\u043C\",\n            value: query,\n            onChange: event => updateQuery(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            alt: \"\",\n            className: \"Movies__search-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Movies__search-button\",\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"Movies__separator-line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"Movies__checkbox\",\n          type: \"checkbox\",\n          checked: shortCards,\n          onChange: () => updateShortCards(!shortCards)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"Movies__checkbox_name\",\n          children: \" \\u041A\\u043E\\u0440\\u043E\\u0442\\u043A\\u043E\\u043C\\u0435\\u0442\\u0440\\u0430\\u0436\\u043A\\u0438 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"Movies__elements\",\n        children: searchResult.slice(0, countFilms).map(card => {\n          return /*#__PURE__*/_jsxDEV(MoviesCard, {\n            onCardClick: onCardClick,\n            onCardLike: onCardLike,\n            isSavedCard: isSavedCard,\n            onBookmarkClick: onBookmarkClick,\n            onCardDelete: onCardDelete,\n            card: card\n          }, card.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), countFilms < searchResult.length && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Movies__add-button opacity-buttons\",\n        type: \"button\",\n        onClick: addMovies,\n        children: \"\\u0415\\u0449\\u0451\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Movies, \"5N1WAIwvuJO3H90t+tel13dhzDQ=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["C:/dev/diploma/movies-explorer-frontend/src/components/Movies/Movies.js"],"names":["MoviesCard","CurrentUserContext","useState","useEffect","useContext","Movies","onCardClick","onCardLike","onCardDelete","onBookmarkClick","isSavedCard","currentUser","apiURL","moviesCount","moviesAddCount","onResize","window","innerWidth","onresize","setTimeout","cards","setCards","filteredCards","setFilteredCards","shortCards","setShortCards","query","setQuery","countFilms","setCountFilms","addCountFilms","setAddCountFilms","savedCards","setSavedCards","updateMovies","localStorage","setItem","JSON","stringify","updateFilteredMovies","updateShortCards","updateQuery","toLowerCase","console","log","parse","getItem","length","fetch","method","headers","then","res","json","data","savedArray","map","item","id","movieId","catch","removeItem","handleSubmit","e","preventDefault","filter","card","nameRU","indexOf","addMovies","searchResult","duration","event","target","value","slice"],"mappings":"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","sourcesContent":["import MoviesCard from '../MoviesCard/MoviesCard';\r\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\r\nimport {useState, useEffect} from 'react';\r\nimport {useContext} from 'react';\r\n\r\nfunction Movies(\r\n{onCardClick, onCardLike, onCardDelete, onBookmarkClick, isSavedCard}) {\r\n\r\n    const currentUser = useContext(CurrentUserContext);\r\n\r\n\r\n    const apiURL = 'https://api.nomoreparties.co/beatfilm-movies'\r\n\r\n    let moviesCount = 5;\r\n    let moviesAddCount = 2;\r\n    \r\n    const onResize = () => {\r\n        if (window.innerWidth >= 1280) {\r\n            moviesCount = 12;\r\n            moviesAddCount =3;\r\n        } else if (window.innerWidth >= 768) {\r\n            moviesCount = 8;\r\n            moviesAddCount = 2;\r\n        } else {\r\n            moviesCount = 5;\r\n            moviesAddCount = 2;\r\n        }\r\n    }\r\n    window.onresize = () => {\r\n        setTimeout(onResize, 1000)\r\n    };\r\n\r\n    onResize();\r\n\r\n    const [cards, setCards] = useState([]);\r\n    const [filteredCards, setFilteredCards] = useState([]);\r\n    const [shortCards, setShortCards] = useState(false);\r\n    const [query, setQuery] = useState('');\r\n    const [countFilms, setCountFilms] = useState(moviesCount);\r\n    const [addCountFilms, setAddCountFilms] = useState(moviesAddCount);\r\n    const [savedCards, setSavedCards] = useState([]);\r\n\r\n    const updateMovies = (cards) => {\r\n        setCards(cards);\r\n        localStorage.setItem('all_filtered_movies', JSON.stringify(cards));\r\n    }\r\n\r\n    const updateFilteredMovies = (cards) => {\r\n        setFilteredCards(cards);\r\n        localStorage.setItem('all_movies', JSON.stringify(cards));\r\n    }\r\n\r\n    const updateShortCards = (shortCards) => {\r\n        setCountFilms (moviesCount);\r\n        setShortCards(shortCards);;\r\n        localStorage.setItem('all_shortCards', JSON.stringify(shortCards));\r\n    }\r\n\r\n    const updateQuery = (query) => {\r\n        query = query.toLowerCase();\r\n        setQuery(query);\r\n        localStorage.setItem('all_query', query);\r\n    }\r\n\r\n    console.log (cards);\r\n\r\n    useEffect (() => {\r\n        const cards = JSON.parse(localStorage.getItem('all_movies') || '[]');\r\n        updateMovies(cards);\r\n        updateFilteredMovies(\r\n            JSON.parse(localStorage.getItem('all_filtered_movies') || '[]')\r\n        );\r\n        updateQuery(localStorage.getItem('all_query') || '');\r\n        updateShortCards(\r\n            JSON.parse(localStorage.getItem('all_short_movies') || 'false')\r\n        );\r\n\r\n        if (!cards.length) {\r\n        fetch (apiURL, {\r\n            method: 'GET',\r\n            headers: {\r\n                //'Accept': 'application/json',\r\n                'Content-Type': 'aplication/json'\r\n            },\r\n        })\r\n        /*.then((card) => {\r\n            const initialArray = card.map((item) => {\r\n                const imageURL = item.image ? item.image.url : \"\";\r\n                return {\r\n                    ...item,\r\n                    image: `https://api.nomoreparties.co${imageURL}`,\r\n                    trailer: item.trailerLink,\r\n                };\r\n            })\r\n        })*/\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n            updateMovies(res);\r\n            updateFilteredMovies([]);\r\n        })\r\n        .then((data) => {\r\n            const savedArray = data.map((item) => {\r\n            return { ...item, id: item.movieId };\r\n            });\r\n            localStorage.setItem(\"savedMovies\", JSON.stringify(savedArray));\r\n            setSavedCards(savedArray);\r\n        })\r\n        .catch(() => {\r\n            localStorage.removeItem(\"savedMovies\");\r\n            /*setLoadingError(\r\n            \"Проблема с соединением или сервер недоступен. Пожалуйста, попробуйте ещё раз\"\r\n            );*/\r\n        });\r\n        } else {\r\n            //console.log({cards});\r\n            setCards(cards);\r\n        }\r\n        const filteredCards = JSON.parse(localStorage.getItem('filtered_all_movies') || '[]');\r\n        if (cards.length) {\r\n            setFilteredCards(filteredCards)\r\n        }\r\n        \r\n        const shortCards = JSON.parse(localStorage.getItem('all_short_movies') || 'false');\r\n        setShortCards (shortCards);\r\n\r\n        setQuery(localStorage.getItem('all_query') || '');\r\n\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        // Запрещаем браузеру переходить по адресу формы\r\n        e.preventDefault();\r\n\r\n        if (query.length){\r\n            const filteredCards = cards.filter (\r\n                card => card.nameRU.toLowerCase().indexOf(query) >= 0\r\n            );\r\n            updateFilteredMovies(filteredCards);\r\n        } else {\r\n            updateFilteredMovies(cards)\r\n        }\r\n    }\r\n\r\n    const addMovies = () => {\r\n        setCountFilms (countFilms + addCountFilms)\r\n    }\r\n\r\n    const searchResult = filteredCards.filter(\r\n        (card) => !shortCards || card.duration <= 40\r\n    )\r\n\r\n    \r\n\r\n    return (\r\n        <main>\r\n            <div className=\"page__container\">\r\n                <form className=\"Movies__search\" onSubmit={handleSubmit}>\r\n                    <div className= \"Movies__search_fa\">\r\n                        <input \r\n                            type=\"text\" className=\"Movies__search-field\"\r\n                            placeholder=\"Фильм\" value ={query}\r\n                            onChange = {(event)=> updateQuery(event.target.value)} \r\n                        />\r\n                        <div \r\n                            alt=\"\" className=\"Movies__search-icon\">\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"Movies__search-button\" type=\"submit\" />\r\n                    <h2 className=\"Movies__separator-line\"></h2>\r\n                    <input\r\n                        className=\"Movies__checkbox\"\r\n                        type=\"checkbox\" checked={shortCards} \r\n                        onChange={ ()=> updateShortCards (!shortCards)}\r\n                    />\r\n                    <h2 className=\"Movies__checkbox_name\"> Короткометражки </h2>\r\n                </form>\r\n                <section className=\"Movies__elements\">\r\n                    {searchResult.slice (0, countFilms)\r\n                    .map ((card) => {\r\n                        return <MoviesCard \r\n                            onCardClick = {onCardClick} onCardLike = {onCardLike}\r\n                            isSavedCard= {isSavedCard} onBookmarkClick={onBookmarkClick}\r\n                            onCardDelete ={onCardDelete} card={card} key = {card.id}/>\r\n                    })}\r\n                </section>\r\n                {countFilms < searchResult.length && (\r\n                        <button className=\"Movies__add-button opacity-buttons\" \r\n                            type=\"button\"onClick={addMovies}>\r\n                                Ещё\r\n                        </button>\r\n                    )\r\n                }\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Movies;"]},"metadata":{},"sourceType":"module"}