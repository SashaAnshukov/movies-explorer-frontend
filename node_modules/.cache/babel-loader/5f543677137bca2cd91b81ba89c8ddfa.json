{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\diploma\\\\movies-explorer-frontend\\\\src\\\\components\\\\Movies\\\\Movies.js\",\n    _s = $RefreshSig$();\n\nimport MoviesCard from '../MoviesCard/MoviesCard';\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\nimport { useState, useEffect } from 'react';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Movies(_ref) {\n  _s();\n\n  var _this = this;\n\n  let {\n    onCardClick,\n    onCardLike,\n    onCardDelete,\n    isSavedCard\n  } = _ref;\n  return function (isSavedCard) {\n    const currentUser = useContext(CurrentUserContext);\n    const apiURL = 'https://api.nomoreparties.co/beatfilm-movies';\n    let moviesCount = 5;\n    let moviesAddCount = 2;\n\n    window.onresize = () => {\n      setTimeout(() => {\n        if (window.innerWidth >= 1280) {\n          moviesCount = 12;\n          moviesAddCount = 3;\n        } else if (window.innerWidth >= 768) {\n          moviesCount = 8;\n          moviesAddCount = 2;\n        } else {\n          moviesCount = 5;\n          moviesAddCount = 2;\n        }\n      }, 1000);\n    };\n\n    const [cards, setCards] = useState([]);\n    const [filteredCards, setFilteredCards] = useState([]);\n    const [shortCards, setShortCards] = useState(false);\n    const [query, setQuery] = useState('');\n    const [countFilms, setCountFilms] = useState(moviesCount);\n    const [addCountFilms, setAddCountFilms] = useState(moviesAddCount);\n    const [savedCards, setSavedCards] = useState([]);\n\n    const updateMovies = cards => {\n      setCards(cards);\n      localStorage.setItem('all_filtered_movies', JSON.stringify(cards));\n    };\n\n    const updateFilteredMovies = cards => {\n      setFilteredCards(cards);\n      localStorage.setItem('all_movies', JSON.stringify(cards));\n    };\n\n    const updateShortCards = shortCards => {\n      setCountFilms(moviesCount);\n      setShortCards(shortCards);\n      ;\n      localStorage.setItem('all_shortCards', JSON.stringify(shortCards));\n    };\n\n    const updateQuery = query => {\n      query = query.toLowerCase();\n      setQuery(query);\n      localStorage.setItem('all_query', query);\n    };\n\n    console.log(cards);\n    useEffect(() => {\n      const cards = JSON.parse(localStorage.getItem('all_movies') || '[]');\n      updateMovies(cards);\n      updateFilteredMovies(JSON.parse(localStorage.getItem('all_filtered_movies') || '[]'));\n      updateQuery(localStorage.getItem('all_query') || '');\n      updateShortCards(JSON.parse(localStorage.getItem('all_short_movies') || 'false'));\n\n      if (!cards.length) {\n        fetch(apiURL, {\n          method: 'GET',\n          headers: {\n            //'Accept': 'application/json',\n            'Content-Type': 'aplication/json'\n          }\n        })\n        /*.then((card) => {\r\n            const initialArray = card.map((item) => {\r\n                const imageURL = item.image ? item.image.url : \"\";\r\n                return {\r\n                    ...item,\r\n                    image: `https://api.nomoreparties.co${imageURL}`,\r\n                    trailer: item.trailerLink,\r\n                };\r\n            })\r\n        })*/\n        .then(res => res.json()).then(res => {\n          updateMovies(res);\n          updateFilteredMovies([]);\n        }).then(data => {\n          const savedArray = data.map(item => {\n            return { ...item,\n              id: item.movieId\n            };\n          });\n          localStorage.setItem(\"savedMovies\", JSON.stringify(savedArray));\n          setSavedCards(savedArray);\n        }).catch(() => {\n          localStorage.removeItem(\"savedMovies\");\n          /*setLoadingError(\r\n          \"Проблема с соединением или сервер недоступен. Пожалуйста, попробуйте ещё раз\"\r\n          );*/\n        });\n      } else {\n        //console.log({cards});\n        setCards(cards);\n      }\n\n      const filteredCards = JSON.parse(localStorage.getItem('filtered_all_movies') || '[]');\n\n      if (cards.length) {\n        setFilteredCards(filteredCards);\n      }\n\n      const shortCards = JSON.parse(localStorage.getItem('all_short_movies') || 'false');\n      setShortCards(shortCards);\n      setQuery(localStorage.getItem('all_query') || '');\n    }, []);\n\n    const handleSubmit = e => {\n      // Запрещаем браузеру переходить по адресу формы\n      e.preventDefault();\n\n      if (query.length) {\n        const filteredCards = cards.filter(card => card.nameRU.toLowerCase().indexOf(query) >= 0);\n        updateFilteredMovies(filteredCards);\n      } else {\n        updateFilteredMovies(cards);\n      }\n    };\n\n    const addMovies = () => {\n      setCountFilms(countFilms + addCountFilms);\n    };\n\n    const searchResult = filteredCards.filter(card => !shortCards || card.duration <= 40);\n\n    function isSavedCard(card) {\n      return savedCards.some(item => item.id === card.id);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"Movies__search\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Movies__search_fa\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"Movies__search-field\",\n              placeholder: \"\\u0424\\u0438\\u043B\\u044C\\u043C\",\n              value: query,\n              onChange: event => updateQuery(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              alt: \"\",\n              className: \"Movies__search-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 25\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Movies__search-button\",\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"Movies__separator-line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"Movies__checkbox\",\n            type: \"checkbox\",\n            checked: shortCards,\n            onChange: () => updateShortCards(!shortCards)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"Movies__checkbox_name\",\n            children: \" \\u041A\\u043E\\u0440\\u043E\\u0442\\u043A\\u043E\\u043C\\u0435\\u0442\\u0440\\u0430\\u0436\\u043A\\u0438 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"Movies__elements\",\n          children: searchResult.slice(0, countFilms).map(card => {\n            return /*#__PURE__*/_jsxDEV(MoviesCard, {\n              onCardClick: onCardClick,\n              onCardLike: onCardLike,\n              isSavedCard: isSavedCard,\n              onCardDelete: onCardDelete,\n              card: card\n            }, card.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 32\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }, _this), countFilms < searchResult.length && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Movies__add-button opacity-buttons\",\n          type: \"button\",\n          onClick: addMovies,\n          children: \"\\u0415\\u0449\\u0451\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, _this);\n  }(isSavedCard);\n}\n\n_s(Movies, \"5N1WAIwvuJO3H90t+tel13dhzDQ=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["C:/dev/diploma/movies-explorer-frontend/src/components/Movies/Movies.js"],"names":["MoviesCard","CurrentUserContext","useState","useEffect","useContext","Movies","onCardClick","onCardLike","onCardDelete","isSavedCard","currentUser","apiURL","moviesCount","moviesAddCount","window","onresize","setTimeout","innerWidth","cards","setCards","filteredCards","setFilteredCards","shortCards","setShortCards","query","setQuery","countFilms","setCountFilms","addCountFilms","setAddCountFilms","savedCards","setSavedCards","updateMovies","localStorage","setItem","JSON","stringify","updateFilteredMovies","updateShortCards","updateQuery","toLowerCase","console","log","parse","getItem","length","fetch","method","headers","then","res","json","data","savedArray","map","item","id","movieId","catch","removeItem","handleSubmit","e","preventDefault","filter","card","nameRU","indexOf","addMovies","searchResult","duration","some","event","target","value","slice"],"mappings":"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","sourcesContent":["import MoviesCard from '../MoviesCard/MoviesCard';\r\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\r\nimport {useState, useEffect} from 'react';\r\nimport {useContext} from 'react';\r\n\r\nfunction Movies(\r\n{onCardClick, onCardLike, onCardDelete, isSavedCard}) {\r\n\r\n    const currentUser = useContext(CurrentUserContext);\r\n\r\n\r\n    const apiURL = 'https://api.nomoreparties.co/beatfilm-movies'\r\n\r\n    let moviesCount = 5;\r\n    let moviesAddCount = 2;\r\n    window.onresize = () => {\r\n        setTimeout (() => {\r\n            if (window.innerWidth >= 1280) {\r\n                moviesCount = 12;\r\n                moviesAddCount =3;\r\n            } else if (window.innerWidth >= 768) {\r\n                moviesCount = 8;\r\n                moviesAddCount = 2;\r\n            } else {\r\n                moviesCount = 5;\r\n                moviesAddCount = 2;\r\n            }\r\n        }, 1000)\r\n    };\r\n\r\n    const [cards, setCards] = useState([]);\r\n    const [filteredCards, setFilteredCards] = useState([]);\r\n    const [shortCards, setShortCards] = useState(false);\r\n    const [query, setQuery] = useState('');\r\n    const [countFilms, setCountFilms] = useState(moviesCount);\r\n    const [addCountFilms, setAddCountFilms] = useState(moviesAddCount);\r\n    const [savedCards, setSavedCards] = useState([]);\r\n\r\n    const updateMovies = (cards) => {\r\n        setCards(cards);\r\n        localStorage.setItem('all_filtered_movies', JSON.stringify(cards));\r\n    }\r\n\r\n    const updateFilteredMovies = (cards) => {\r\n        setFilteredCards(cards);\r\n        localStorage.setItem('all_movies', JSON.stringify(cards));\r\n    }\r\n\r\n    const updateShortCards = (shortCards) => {\r\n        setCountFilms (moviesCount);\r\n        setShortCards(shortCards);;\r\n        localStorage.setItem('all_shortCards', JSON.stringify(shortCards));\r\n    }\r\n\r\n    const updateQuery = (query) => {\r\n        query = query.toLowerCase();\r\n        setQuery(query);\r\n        localStorage.setItem('all_query', query);\r\n    }\r\n\r\n    console.log (cards);\r\n\r\n    useEffect (() => {\r\n        const cards = JSON.parse(localStorage.getItem('all_movies') || '[]');\r\n        updateMovies(cards);\r\n        updateFilteredMovies(\r\n            JSON.parse(localStorage.getItem('all_filtered_movies') || '[]')\r\n        );\r\n        updateQuery(localStorage.getItem('all_query') || '');\r\n        updateShortCards(\r\n            JSON.parse(localStorage.getItem('all_short_movies') || 'false')\r\n        );\r\n\r\n        if (!cards.length) {\r\n        fetch (apiURL, {\r\n            method: 'GET',\r\n            headers: {\r\n                //'Accept': 'application/json',\r\n                'Content-Type': 'aplication/json'\r\n            },\r\n        })\r\n        /*.then((card) => {\r\n            const initialArray = card.map((item) => {\r\n                const imageURL = item.image ? item.image.url : \"\";\r\n                return {\r\n                    ...item,\r\n                    image: `https://api.nomoreparties.co${imageURL}`,\r\n                    trailer: item.trailerLink,\r\n                };\r\n            })\r\n        })*/\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n            updateMovies(res);\r\n            updateFilteredMovies([]);\r\n        })\r\n        .then((data) => {\r\n            const savedArray = data.map((item) => {\r\n            return { ...item, id: item.movieId };\r\n            });\r\n            localStorage.setItem(\"savedMovies\", JSON.stringify(savedArray));\r\n            setSavedCards(savedArray);\r\n        })\r\n        .catch(() => {\r\n            localStorage.removeItem(\"savedMovies\");\r\n            /*setLoadingError(\r\n            \"Проблема с соединением или сервер недоступен. Пожалуйста, попробуйте ещё раз\"\r\n            );*/\r\n        });\r\n        } else {\r\n            //console.log({cards});\r\n            setCards(cards);\r\n        }\r\n        const filteredCards = JSON.parse(localStorage.getItem('filtered_all_movies') || '[]');\r\n        if (cards.length) {\r\n            setFilteredCards(filteredCards)\r\n        }\r\n        \r\n        const shortCards = JSON.parse(localStorage.getItem('all_short_movies') || 'false');\r\n        setShortCards (shortCards);\r\n\r\n        setQuery(localStorage.getItem('all_query') || '');\r\n\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        // Запрещаем браузеру переходить по адресу формы\r\n        e.preventDefault();\r\n\r\n        if (query.length){\r\n            const filteredCards = cards.filter (\r\n                card => card.nameRU.toLowerCase().indexOf(query) >= 0\r\n            );\r\n            updateFilteredMovies(filteredCards);\r\n        } else {\r\n            updateFilteredMovies(cards)\r\n        }\r\n    }\r\n\r\n    const addMovies = () => {\r\n        setCountFilms (countFilms + addCountFilms)\r\n    }\r\n\r\n    const searchResult = filteredCards.filter(\r\n        (card) => !shortCards || card.duration <= 40\r\n    )\r\n\r\n    function isSavedCard(card) {\r\n        return savedCards.some((item) => item.id === card.id);\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"page__container\">\r\n                <form className=\"Movies__search\" onSubmit={handleSubmit}>\r\n                    <div className= \"Movies__search_fa\">\r\n                        <input \r\n                            type=\"text\" className=\"Movies__search-field\"\r\n                            placeholder=\"Фильм\" value ={query}\r\n                            onChange = {(event)=> updateQuery(event.target.value)} \r\n                        />\r\n                        <div \r\n                            alt=\"\" className=\"Movies__search-icon\">\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"Movies__search-button\" type=\"submit\" />\r\n                    <h2 className=\"Movies__separator-line\"></h2>\r\n                    <input\r\n                        className=\"Movies__checkbox\"\r\n                        type=\"checkbox\" checked={shortCards} \r\n                        onChange={ ()=> updateShortCards (!shortCards)}\r\n                    />\r\n                    <h2 className=\"Movies__checkbox_name\"> Короткометражки </h2>\r\n                </form>\r\n                <section className=\"Movies__elements\">\r\n                    {searchResult.slice (0, countFilms)\r\n                    .map ((card) => {\r\n                        return <MoviesCard \r\n                            onCardClick = {onCardClick} onCardLike = {onCardLike}\r\n                            isSavedCard= {isSavedCard}\r\n                            onCardDelete ={onCardDelete} card={card} key = {card.id}/>\r\n                    })}\r\n                </section>\r\n                {countFilms < searchResult.length && (\r\n                        <button className=\"Movies__add-button opacity-buttons\" \r\n                            type=\"button\"onClick={addMovies}>\r\n                                Ещё\r\n                        </button>\r\n                    )\r\n                }\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Movies;"]},"metadata":{},"sourceType":"module"}