{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\diploma\\\\movies-explorer-frontend\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport FormList from '../FormList/FormList';\nimport FormComponent from '../FormComponent/FormComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(_ref) {\n  _s();\n\n  let {\n    authorization\n  } = _ref;\n  // Стейт, в котором содержится значение инпута - mail, password\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState(''); // Обработчики изменения инпута обновляют стейт\n\n  function handleChangeEmail(e) {\n    setEmail(e.target.value);\n  }\n\n  function handleChangePassword(e) {\n    setPassword(e.target.value);\n  } //Отправляем данные на сервер\n\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault(); // Передаём значения управляемых компонентов во внешний обработчик\n\n    authorization({\n      email,\n      password\n    });\n  } //очищаем инпуты при каждом открытии модального окна\n\n  /*useEffect(() => {\r\n      if (isOpen) {\r\n          setMail('');\r\n          setPassword('')\r\n      }\r\n  }, [isOpen])*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormList, {\n      title: 'Рады видеть!',\n      onSubmit: handleSubmit,\n      name: 'Вход',\n      buttonText: 'Войти',\n      children: [/*#__PURE__*/_jsxDEV(FormComponent, {\n        name: 'E-mail',\n        value: email,\n        onChange: handleChangeEmail,\n        minLength: '1',\n        maxLength: '30',\n        required: true,\n        type: 'text',\n        nameInput: 'Email'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormComponent, {\n        name: 'Пароль',\n        value: password,\n        onChange: handleChangePassword,\n        minLength: '4',\n        required: true,\n        type: 'password',\n        nameInput: 'password'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"FormList__button_span\",\n      children: [\"\\u0415\\u0449\\u0451 \\u043D\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u044B?\", /*#__PURE__*/_jsxDEV(Link, {\n        className: \"FormList__button_link\",\n        to: \"/sign-up\",\n        children: \" \\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/dev/diploma/movies-explorer-frontend/src/components/Login/Login.js"],"names":["React","useState","Link","FormList","FormComponent","Login","authorization","email","setEmail","password","setPassword","handleChangeEmail","e","target","value","handleChangePassword","handleSubmit","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;;AAEA,SAASC,KAAT,OAAiC;AAAA;;AAAA,MAAjB;AAACC,IAAAA;AAAD,GAAiB;AAC7B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC,CAH6B,CAK7B;;AAEA,WAASU,iBAAT,CAA2BC,CAA3B,EAA8B;AAC1BJ,IAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH;;AAED,WAASC,oBAAT,CAA8BH,CAA9B,EAAiC;AAC7BF,IAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAb4B,CAe7B;;;AACA,WAASE,YAAT,CAAsBJ,CAAtB,EAAyB;AACrB;AACAA,IAAAA,CAAC,CAACK,cAAF,GAFqB,CAGrB;;AACAX,IAAAA,aAAa,CAAC;AAAEC,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAAD,CAAb;AAEH,GAtB4B,CAwB7B;;AACA;AACJ;AACA;AACA;AACA;AACA;;;AAEI,sBACI;AAAA,4BACI,QAAC,QAAD;AACI,MAAA,KAAK,EAAI,cADb;AAC6B,MAAA,QAAQ,EAAEO,YADvC;AAEI,MAAA,IAAI,EAAE,MAFV;AAEmB,MAAA,UAAU,EAAI,OAFjC;AAAA,8BAII,QAAC,aAAD;AAAe,QAAA,IAAI,EAAI,QAAvB;AAAiC,QAAA,KAAK,EAAIT,KAA1C;AAAiD,QAAA,QAAQ,EAAII,iBAA7D;AACI,QAAA,SAAS,EAAI,GADjB;AACsB,QAAA,SAAS,EAAI,IADnC;AACyC,QAAA,QAAQ,MADjD;AACkD,QAAA,IAAI,EAAI,MAD1D;AACkE,QAAA,SAAS,EAAG;AAD9E;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI,QAAC,aAAD;AAAe,QAAA,IAAI,EAAI,QAAvB;AAAiC,QAAA,KAAK,EAAIF,QAA1C;AAAoD,QAAA,QAAQ,EAAIM,oBAAhE;AACI,QAAA,SAAS,EAAI,GADjB;AACuB,QAAA,QAAQ,MAD/B;AACgC,QAAA,IAAI,EAAI,UADxC;AACoD,QAAA,SAAS,EAAG;AADhE;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AAAG,MAAA,SAAS,EAAC,uBAAb;AAAA,mKACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,uBAAhB;AAAwC,QAAA,EAAE,EAAC,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAnDQV,K;;KAAAA,K;AAqDT,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport FormList from '../FormList/FormList';\r\nimport FormComponent from '../FormComponent/FormComponent';\r\n\r\nfunction Login ({authorization}) {\r\n    // Стейт, в котором содержится значение инпута - mail, password\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    // Обработчики изменения инпута обновляют стейт\r\n\r\n    function handleChangeEmail(e) {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    function handleChangePassword(e) {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    //Отправляем данные на сервер\r\n    function handleSubmit(e) {\r\n        // Запрещаем браузеру переходить по адресу формы\r\n        e.preventDefault();\r\n        // Передаём значения управляемых компонентов во внешний обработчик\r\n        authorization({ email, password });\r\n\r\n    }\r\n\r\n    //очищаем инпуты при каждом открытии модального окна\r\n    /*useEffect(() => {\r\n        if (isOpen) {\r\n            setMail('');\r\n            setPassword('')\r\n        }\r\n    }, [isOpen])*/\r\n\r\n    return (\r\n        <div>\r\n            <FormList\r\n                title = {'Рады видеть!'} onSubmit={handleSubmit}\r\n                name={'Вход'}  buttonText = {'Войти'}\r\n            >\r\n                <FormComponent name = {'E-mail'} value = {email} onChange = {handleChangeEmail}\r\n                    minLength = {'1'} maxLength = {'30'} required type = {'text'} nameInput ={'Email'}\r\n                />\r\n                <FormComponent name = {'Пароль'} value = {password} onChange = {handleChangePassword}\r\n                    minLength = {'4'}  required type = {'password'} nameInput ={'password'}\r\n                />\r\n            </FormList>\r\n            <p className=\"FormList__button_span\">Ещё не зарегистрированы?\r\n                <Link className=\"FormList__button_link\" to='/sign-up'> Регистрация</Link>\r\n            </p>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}