{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\diploma\\\\movies-explorer-frontend\\\\src\\\\components\\\\Progressbar\\\\Progressbar.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProgressBar = _ref => {\n  let {\n    completeColor,\n    completed\n  } = _ref;\n\n  function clamp(min, value, max) {\n    return Math.min(Math.max(min, value), max);\n  }\n\n  const fillerStyles = {\n    width: `${completed}%`,\n    width: clamp(0, completed, 100),\n    backgroundColor: completeColor\n  };\n  const fillerStyles2 = {\n    width: `${'100' - completed}%`,\n    width: clamp(0, completed, 100)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ProgressBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: fillerStyles,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ProgressBar__text\",\n        children: `${'1 неделя'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: fillerStyles2,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ProgressBar__text\",\n        children: `${'4 недели'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ProgressBar;\nexport default ProgressBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"sources":["C:/dev/diploma/movies-explorer-frontend/src/components/Progressbar/Progressbar.js"],"names":["ProgressBar","completeColor","completed","clamp","min","value","max","Math","fillerStyles","width","backgroundColor","fillerStyles2"],"mappings":";;;AAAA,MAAMA,WAAW,GAAG,QAAkC;AAAA,MAAjC;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,GAAiC;;AAElD,WAASC,KAAT,CAAgBC,GAAhB,EAAqBC,KAArB,EAA4BC,GAA5B,EAAiC;AAC7B,WAAOC,IAAI,CAACH,GAAL,CAASG,IAAI,CAACD,GAAL,CAASF,GAAT,EAAcC,KAAd,CAAT,EAA+BC,GAA/B,CAAP;AACH;;AAED,QAAME,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAG,GAAEP,SAAU,GADH;AAEjBO,IAAAA,KAAK,EAAEN,KAAK,CAAC,CAAD,EAAID,SAAJ,EAAe,GAAf,CAFK;AAGjBQ,IAAAA,eAAe,EAAET;AAHA,GAArB;AAMA,QAAMU,aAAa,GAAG;AAClBF,IAAAA,KAAK,EAAG,GAAE,QAAOP,SAAU,GADT;AAElBO,IAAAA,KAAK,EAAEN,KAAK,CAAC,CAAD,EAAID,SAAJ,EAAe,GAAf;AAFM,GAAtB;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AAAK,MAAA,KAAK,EAAEM,YAAZ;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA,kBAAsC,GAAE,UAAW;AAAnD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,KAAK,EAAEG,aAAZ;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA,kBAAsC,GAAE,UAAW;AAAnD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA3BD;;KAAMX,W;AA6BN,eAAeA,WAAf","sourcesContent":["const ProgressBar = ({ completeColor, completed }) => {\r\n\r\n    function clamp (min, value, max) {\r\n        return Math.min(Math.max(min, value), max);\r\n    }\r\n\r\n    const fillerStyles = {\r\n        width: `${completed}%`,\r\n        width: clamp(0, completed, 100),\r\n        backgroundColor: completeColor,\r\n    }\r\n    \r\n    const fillerStyles2 = {\r\n        width: `${'100'- completed}%`,\r\n        width: clamp(0, completed, 100)\r\n    }\r\n\r\n    return (\r\n        <div className=\"ProgressBar\">\r\n            <div style={fillerStyles}>\r\n                <span className=\"ProgressBar__text\">{`${'1 неделя'}`}</span>\r\n            </div>\r\n            <div style={fillerStyles2}>\r\n                <span className=\"ProgressBar__text\">{`${'4 недели'}`}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}