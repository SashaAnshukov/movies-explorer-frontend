{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\diploma\\\\movies-explorer-frontend\\\\src\\\\components\\\\Movies\\\\Movies.js\",\n    _s = $RefreshSig$();\n\nimport MoviesCard from '../MoviesCard/MoviesCard';\nimport Preloader from '../Preloader/Preloader';\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\nimport { useState, useEffect } from 'react';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Movies(_ref) {\n  _s();\n\n  let {\n    onCardClick,\n    onCardLike,\n    onCardDelete,\n    onBookmarkClick,\n    isSavedCard\n  } = _ref;\n  const currentUser = useContext(CurrentUserContext);\n  const apiURL = 'https://api.nomoreparties.co/beatfilm-movies';\n  let moviesCount = 5;\n  let moviesAddCount = 2;\n\n  const onResize = () => {\n    if (window.innerWidth >= 1280) {\n      moviesCount = 12;\n      moviesAddCount = 3;\n    } else if (window.innerWidth >= 768) {\n      moviesCount = 8;\n      moviesAddCount = 2;\n    } else {\n      moviesCount = 5;\n      moviesAddCount = 2;\n    }\n  };\n\n  window.onresize = () => {\n    setTimeout(onResize, 1000);\n  };\n\n  onResize();\n  const [cards, setCards] = useState([]);\n  const [filteredCards, setFilteredCards] = useState([]);\n  const [shortCards, setShortCards] = useState(false);\n  const [query, setQuery] = useState('');\n  const [countFilms, setCountFilms] = useState(moviesCount);\n  const [addCountFilms, setAddCountFilms] = useState(moviesAddCount);\n  const [savedCards, setSavedCards] = useState([]);\n  const [isLoading, setisLoading] = useState(false);\n\n  const updateMovies = cards => {\n    setCards(cards);\n    localStorage.setItem('all_movies', JSON.stringify(cards));\n  };\n\n  const updateFilteredMovies = cards => {\n    setFilteredCards(cards);\n    localStorage.setItem('all_filtered_movies', JSON.stringify(cards));\n  };\n\n  const updateShortCards = shortCards => {\n    setisLoading(true);\n    setTimeout(() => {\n      setCountFilms(moviesCount);\n      setShortCards(shortCards);\n      ;\n      localStorage.setItem('all_shortCards', JSON.stringify(shortCards));\n      setisLoading(false);\n    }, 600);\n  };\n\n  const updateQuery = query => {\n    query = query.toLowerCase();\n    setQuery(query);\n    localStorage.setItem('all_query', query);\n  };\n\n  console.log(cards);\n  useEffect(() => {\n    const cards = JSON.parse(localStorage.getItem('all_movies') || '[]');\n    updateMovies(cards);\n    updateFilteredMovies(JSON.parse(localStorage.getItem('all_filtered_movies') || '[]'));\n    updateQuery(localStorage.getItem('all_query') || '');\n    updateShortCards(JSON.parse(localStorage.getItem('all_short_movies') || 'false'));\n\n    if (!cards.length) {\n      fetch(apiURL, {\n        method: 'GET',\n        headers: {\n          //'Accept': 'application/json',\n          'Content-Type': 'aplication/json'\n        }\n      }).then(res => res.json()).then(res => {\n        updateMovies(res);\n        updateFilteredMovies([]);\n      });\n    }\n  }, []);\n\n  const handleSubmit = e => {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n    setisLoading(true);\n    setTimeout(() => {\n      if (query.length) {\n        const filteredCards = cards.filter(card => card.nameRU.toLowerCase().indexOf(query) >= 0);\n        updateFilteredMovies(filteredCards);\n        setisLoading(false);\n      } else {\n        updateFilteredMovies(cards);\n        setisLoading(false);\n      }\n    }, 600);\n  };\n\n  const addMovies = () => {\n    setisLoading(true);\n    setTimeout(() => {\n      setCountFilms(countFilms + addCountFilms);\n      setisLoading(false);\n    }, 600);\n  };\n\n  const searchResult = filteredCards.filter(card => !shortCards || card.duration <= 40);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"Movies__elements\",\n      children: searchResult.slice(0, countFilms).map(card => {\n        return /*#__PURE__*/_jsxDEV(MoviesCard, {\n          onCardClick: onCardClick,\n          onCardLike: onCardLike,\n          isSavedCard: isSavedCard,\n          onBookmarkClick: onBookmarkClick,\n          onCardDelete: onCardDelete,\n          card: card\n        }, card.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 31\n    }, this), countFilms < searchResult.length && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Movies__add-button opacity-buttons\",\n      type: \"button\",\n      onClick: addMovies,\n      children: \"\\u0415\\u0449\\u0451\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Movies, \"YWVrcsBv5CPYR6eqF3Y/B22am14=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["C:/dev/diploma/movies-explorer-frontend/src/components/Movies/Movies.js"],"names":["MoviesCard","Preloader","CurrentUserContext","useState","useEffect","useContext","Movies","onCardClick","onCardLike","onCardDelete","onBookmarkClick","isSavedCard","currentUser","apiURL","moviesCount","moviesAddCount","onResize","window","innerWidth","onresize","setTimeout","cards","setCards","filteredCards","setFilteredCards","shortCards","setShortCards","query","setQuery","countFilms","setCountFilms","addCountFilms","setAddCountFilms","savedCards","setSavedCards","isLoading","setisLoading","updateMovies","localStorage","setItem","JSON","stringify","updateFilteredMovies","updateShortCards","updateQuery","toLowerCase","console","log","parse","getItem","length","fetch","method","headers","then","res","json","handleSubmit","e","preventDefault","filter","card","nameRU","indexOf","addMovies","searchResult","duration","slice","map","id"],"mappings":"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","sourcesContent":["import MoviesCard from '../MoviesCard/MoviesCard';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\r\nimport {useState, useEffect} from 'react';\r\nimport {useContext} from 'react';\r\n\r\nfunction Movies(\r\n{onCardClick, onCardLike, onCardDelete, onBookmarkClick, isSavedCard}) {\r\n\r\n    const currentUser = useContext(CurrentUserContext);\r\n\r\n\r\n    const apiURL = 'https://api.nomoreparties.co/beatfilm-movies'\r\n\r\n    let moviesCount = 5;\r\n    let moviesAddCount = 2;\r\n    \r\n    const onResize = () => {\r\n        if (window.innerWidth >= 1280) {\r\n            moviesCount = 12;\r\n            moviesAddCount =3;\r\n        } else if (window.innerWidth >= 768) {\r\n            moviesCount = 8;\r\n            moviesAddCount = 2;\r\n        } else {\r\n            moviesCount = 5;\r\n            moviesAddCount = 2;\r\n        }\r\n    }\r\n    window.onresize = () => {\r\n        setTimeout(onResize, 1000)\r\n    };\r\n\r\n    onResize();\r\n\r\n    const [cards, setCards] = useState([]);\r\n    const [filteredCards, setFilteredCards] = useState([]);\r\n    const [shortCards, setShortCards] = useState(false);\r\n    const [query, setQuery] = useState('');\r\n    const [countFilms, setCountFilms] = useState(moviesCount);\r\n    const [addCountFilms, setAddCountFilms] = useState(moviesAddCount);\r\n    const [savedCards, setSavedCards] = useState([]);\r\n    const [isLoading, setisLoading] = useState(false);\r\n\r\n    const updateMovies = (cards) => {\r\n        setCards(cards);\r\n        localStorage.setItem('all_movies', JSON.stringify(cards));\r\n    }\r\n\r\n    const updateFilteredMovies = (cards) => {\r\n        setFilteredCards(cards);\r\n        localStorage.setItem('all_filtered_movies', JSON.stringify(cards));\r\n    }\r\n\r\n    const updateShortCards = (shortCards) => {\r\n        setisLoading(true)\r\n        setTimeout(() => {\r\n            setCountFilms (moviesCount);\r\n            setShortCards(shortCards);;\r\n            localStorage.setItem('all_shortCards', JSON.stringify(shortCards));\r\n            setisLoading(false)\r\n        }, 600)\r\n    }\r\n\r\n    const updateQuery = (query) => {\r\n        query = query.toLowerCase();\r\n        setQuery(query);\r\n        localStorage.setItem('all_query', query);\r\n    }\r\n\r\n    console.log (cards);\r\n\r\n    useEffect (() => {\r\n        const cards = JSON.parse(localStorage.getItem('all_movies') || '[]');\r\n        updateMovies(cards);\r\n        updateFilteredMovies(\r\n            JSON.parse(localStorage.getItem('all_filtered_movies') || '[]')\r\n        );\r\n        updateQuery(localStorage.getItem('all_query') || '');\r\n        updateShortCards(\r\n            JSON.parse(localStorage.getItem('all_short_movies') || 'false')\r\n        );\r\n\r\n        if (!cards.length) {\r\n            fetch (apiURL, {\r\n                method: 'GET',\r\n                headers: {\r\n                    //'Accept': 'application/json',\r\n                    'Content-Type': 'aplication/json'\r\n                },\r\n            })\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n            updateMovies(res);\r\n            updateFilteredMovies([]);\r\n            })\r\n        }\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        // Запрещаем браузеру переходить по адресу формы\r\n        e.preventDefault();\r\n        setisLoading(true)\r\n        setTimeout(() => {\r\n            if (query.length){\r\n                const filteredCards = cards.filter (\r\n                    card => card.nameRU.toLowerCase().indexOf(query) >= 0,\r\n                    \r\n                );\r\n                updateFilteredMovies(filteredCards)\r\n                setisLoading(false)\r\n            } else {\r\n                updateFilteredMovies(cards)\r\n                setisLoading(false)\r\n            }\r\n        }, 600)\r\n    }\r\n\r\n    const addMovies = () => {\r\n        setisLoading(true)\r\n        setTimeout(() => {\r\n            setCountFilms (countFilms + addCountFilms)\r\n            setisLoading(false)\r\n        }, 600)\r\n    }\r\n\r\n    const searchResult = filteredCards.filter(\r\n        (card) => !shortCards || card.duration <= 40\r\n    )\r\n\r\n    return (\r\n        <main>\r\n            \r\n            \r\n            \r\n                <section className=\"Movies__elements\">\r\n                    {searchResult.slice (0, countFilms)\r\n                    .map ((card) => {\r\n                        return <MoviesCard \r\n                            onCardClick = {onCardClick} onCardLike = {onCardLike}\r\n                            isSavedCard= {isSavedCard} onBookmarkClick={onBookmarkClick}\r\n                            onCardDelete ={onCardDelete} card={card} key = {card.id}/>\r\n                    })}\r\n                </section>\r\n                {isLoading && <Preloader/> }\r\n                {countFilms < searchResult.length && (\r\n                    <button className=\"Movies__add-button opacity-buttons\" \r\n                        type=\"button\"onClick={addMovies}>\r\n                            Ещё\r\n                    </button>   \r\n                )}\r\n            \r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Movies;"]},"metadata":{},"sourceType":"module"}