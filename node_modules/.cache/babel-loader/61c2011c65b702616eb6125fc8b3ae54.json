{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\diploma\\\\movies-explorer-frontend\\\\src\\\\components\\\\Register\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport FormList from '../FormList/FormList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register(_ref) {\n  _s();\n\n  let {\n    registration\n  } = _ref;\n  // Стейт, в котором содержится значение инпута - mail, password\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState(''); // Обработчики изменения инпута обновляют стейт\n\n  function handleChangeName(e) {\n    setName(e.target.value);\n  }\n\n  function handleChangeEmail(e) {\n    setEmail(e.target.value);\n  }\n\n  function handleChangePassword(e) {\n    setPassword(e.target.value);\n  } //Отправляем данные на сервер\n\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault(); // Передаём значения управляемых компонентов во внешний обработчик\n\n    const datastartPage = {};\n    datastartPage.email = email;\n    datastartPage.password = password;\n    registration(datastartPage);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormList, {\n      title: 'Добро пожаловать!',\n      onSubmit: handleSubmit,\n      buttonText: 'Зарегистрироваться'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"y7AVIb+2dT29WONRxO7d74XBSmc=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/dev/diploma/movies-explorer-frontend/src/components/Register/Register.js"],"names":["React","useState","FormList","Register","registration","name","setName","email","setEmail","password","setPassword","handleChangeName","e","target","value","handleChangeEmail","handleChangePassword","handleSubmit","preventDefault","datastartPage"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AAEA,SAASC,QAAT,OAAmC;AAAA;;AAAA,MAAhB;AAACC,IAAAA;AAAD,GAAgB;AAE/B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC,CAL+B,CAO/B;;AAEA,WAASU,gBAAT,CAA0BC,CAA1B,EAA6B;AACzBN,IAAAA,OAAO,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH;;AAED,WAASC,iBAAT,CAA2BH,CAA3B,EAA8B;AAC1BJ,IAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH;;AAED,WAASE,oBAAT,CAA8BJ,CAA9B,EAAiC;AAC7BF,IAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAnB8B,CAqBnC;;;AACI,WAASG,YAAT,CAAsBL,CAAtB,EAAyB;AACzB;AACAA,IAAAA,CAAC,CAACM,cAAF,GAFyB,CAIzB;;AACA,UAAMC,aAAa,GAAG,EAAtB;AACAA,IAAAA,aAAa,CAACZ,KAAd,GAAsBA,KAAtB;AACAY,IAAAA,aAAa,CAACV,QAAd,GAAyBA,QAAzB;AACAL,IAAAA,YAAY,CAACe,aAAD,CAAZ;AACC;;AAED,sBACI;AAAA,2BACI,QAAC,QAAD;AACI,MAAA,KAAK,EAAI,mBADb;AACkC,MAAA,QAAQ,EAAEF,YAD5C;AAEI,MAAA,UAAU,EAAI;AAFlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA1CQd,Q;;KAAAA,Q;AA4CT,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport {useState} from 'react';\r\nimport FormList from '../FormList/FormList';\r\n\r\nfunction Register ({registration}) {\r\n    \r\n    // Стейт, в котором содержится значение инпута - mail, password\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    // Обработчики изменения инпута обновляют стейт\r\n\r\n    function handleChangeName(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleChangeEmail(e) {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    function handleChangePassword(e) {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n//Отправляем данные на сервер\r\n    function handleSubmit(e) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    e.preventDefault();\r\n    \r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    const datastartPage = {};\r\n    datastartPage.email = email;\r\n    datastartPage.password = password;\r\n    registration(datastartPage);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <FormList\r\n                title = {'Добро пожаловать!'} onSubmit={handleSubmit}\r\n                buttonText = {'Зарегистрироваться'}\r\n            />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}