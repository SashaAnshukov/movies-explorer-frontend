{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport * as React from 'react';\nimport TextArea from 'rc-textarea';\nimport KeywordTrigger from './KeywordTrigger';\nimport { MentionsContextProvider } from './MentionsContext';\nimport Option from './Option';\nimport { filterOption as defaultFilterOption, getBeforeSelectionText, getLastMeasureIndex, omit, replaceWithMeasure, setInputSelection, validateSearch as defaultValidateSearch } from './util';\n\nvar Mentions = /*#__PURE__*/function (_React$Component) {\n  _inherits(Mentions, _React$Component);\n\n  var _super = _createSuper(Mentions);\n\n  function Mentions(props) {\n    var _this;\n\n    _classCallCheck(this, Mentions);\n\n    _this = _super.call(this, props);\n    _this.focusId = undefined;\n\n    _this.triggerChange = function (value) {\n      var onChange = _this.props.onChange;\n\n      if (!('value' in _this.props)) {\n        _this.setState({\n          value: value\n        });\n      }\n\n      if (onChange) {\n        onChange(value);\n      }\n    };\n\n    _this.onChange = function (_ref) {\n      var value = _ref.target.value;\n\n      _this.triggerChange(value);\n    }; // Check if hit the measure keyword\n\n\n    _this.onKeyDown = function (event) {\n      var which = event.which;\n      var _this$state = _this.state,\n          activeIndex = _this$state.activeIndex,\n          measuring = _this$state.measuring;\n      var clientOnKeyDown = _this.props.onKeyDown;\n\n      if (clientOnKeyDown) {\n        clientOnKeyDown(event);\n      } // Skip if not measuring\n\n\n      if (!measuring) {\n        return;\n      }\n\n      if (which === KeyCode.UP || which === KeyCode.DOWN) {\n        // Control arrow function\n        var optionLen = _this.getOptions().length;\n\n        var offset = which === KeyCode.UP ? -1 : 1;\n        var newActiveIndex = (activeIndex + offset + optionLen) % optionLen;\n\n        _this.setState({\n          activeIndex: newActiveIndex\n        });\n\n        event.preventDefault();\n      } else if (which === KeyCode.ESC) {\n        _this.stopMeasure();\n      } else if (which === KeyCode.ENTER) {\n        // Measure hit\n        event.preventDefault();\n\n        var options = _this.getOptions();\n\n        if (!options.length) {\n          _this.stopMeasure();\n\n          return;\n        }\n\n        var option = options[activeIndex];\n\n        _this.selectOption(option);\n      }\n    };\n    /**\n     * When to start measure:\n     * 1. When user press `prefix`\n     * 2. When measureText !== prevMeasureText\n     *  - If measure hit\n     *  - If measuring\n     *\n     * When to stop measure:\n     * 1. Selection is out of range\n     * 2. Contains `space`\n     * 3. ESC or select one\n     */\n\n\n    _this.onKeyUp = function (event) {\n      var key = event.key,\n          which = event.which;\n      var _this$state2 = _this.state,\n          prevMeasureText = _this$state2.measureText,\n          measuring = _this$state2.measuring;\n      var _this$props = _this.props,\n          _this$props$prefix = _this$props.prefix,\n          prefix = _this$props$prefix === void 0 ? '' : _this$props$prefix,\n          clientOnKeyUp = _this$props.onKeyUp,\n          onSearch = _this$props.onSearch,\n          validateSearch = _this$props.validateSearch;\n      var target = event.target;\n      var selectionStartText = getBeforeSelectionText(target);\n\n      var _getLastMeasureIndex = getLastMeasureIndex(selectionStartText, prefix),\n          measureIndex = _getLastMeasureIndex.location,\n          measurePrefix = _getLastMeasureIndex.prefix; // If the client implements an onKeyUp handler, call it\n\n\n      if (clientOnKeyUp) {\n        clientOnKeyUp(event);\n      } // Skip if match the white key list\n\n\n      if ([KeyCode.ESC, KeyCode.UP, KeyCode.DOWN, KeyCode.ENTER].indexOf(which) !== -1) {\n        return;\n      }\n\n      if (measureIndex !== -1) {\n        var measureText = selectionStartText.slice(measureIndex + measurePrefix.length);\n        var validateMeasure = validateSearch(measureText, _this.props);\n        var matchOption = !!_this.getOptions(measureText).length;\n\n        if (validateMeasure) {\n          if (key === measurePrefix || key === 'Shift' || measuring || measureText !== prevMeasureText && matchOption) {\n            _this.startMeasure(measureText, measurePrefix, measureIndex);\n          }\n        } else if (measuring) {\n          // Stop if measureText is invalidate\n          _this.stopMeasure();\n        }\n        /**\n         * We will trigger `onSearch` to developer since they may use for async update.\n         * If met `space` means user finished searching.\n         */\n\n\n        if (onSearch && validateMeasure) {\n          onSearch(measureText, measurePrefix);\n        }\n      } else if (measuring) {\n        _this.stopMeasure();\n      }\n    };\n\n    _this.onPressEnter = function (event) {\n      var measuring = _this.state.measuring;\n      var onPressEnter = _this.props.onPressEnter;\n\n      if (!measuring && onPressEnter) {\n        onPressEnter(event);\n      }\n    };\n\n    _this.onInputFocus = function (event) {\n      _this.onFocus(event);\n    };\n\n    _this.onInputBlur = function (event) {\n      _this.onBlur(event);\n    };\n\n    _this.onDropdownFocus = function () {\n      _this.onFocus();\n    };\n\n    _this.onDropdownBlur = function () {\n      _this.onBlur();\n    };\n\n    _this.onFocus = function (event) {\n      window.clearTimeout(_this.focusId);\n      var isFocus = _this.state.isFocus;\n      var onFocus = _this.props.onFocus;\n\n      if (!isFocus && event && onFocus) {\n        onFocus(event);\n      }\n\n      _this.setState({\n        isFocus: true\n      });\n    };\n\n    _this.onBlur = function (event) {\n      _this.focusId = window.setTimeout(function () {\n        var onBlur = _this.props.onBlur;\n\n        _this.setState({\n          isFocus: false\n        });\n\n        _this.stopMeasure();\n\n        if (onBlur) {\n          onBlur(event);\n        }\n      }, 0);\n    };\n\n    _this.selectOption = function (option) {\n      var _this$state3 = _this.state,\n          value = _this$state3.value,\n          measureLocation = _this$state3.measureLocation,\n          measurePrefix = _this$state3.measurePrefix;\n      var _this$props2 = _this.props,\n          split = _this$props2.split,\n          onSelect = _this$props2.onSelect;\n      var _option$value = option.value,\n          mentionValue = _option$value === void 0 ? '' : _option$value;\n\n      var _replaceWithMeasure = replaceWithMeasure(value, {\n        measureLocation: measureLocation,\n        targetText: mentionValue,\n        prefix: measurePrefix,\n        selectionStart: _this.textarea.selectionStart,\n        split: split\n      }),\n          text = _replaceWithMeasure.text,\n          selectionLocation = _replaceWithMeasure.selectionLocation;\n\n      _this.triggerChange(text);\n\n      _this.stopMeasure(function () {\n        // We need restore the selection position\n        setInputSelection(_this.textarea, selectionLocation);\n      });\n\n      if (onSelect) {\n        onSelect(option, measurePrefix);\n      }\n    };\n\n    _this.setActiveIndex = function (activeIndex) {\n      _this.setState({\n        activeIndex: activeIndex\n      });\n    };\n\n    _this.setTextAreaRef = function (element) {\n      var _element$resizableTex;\n\n      _this.textarea = element === null || element === void 0 ? void 0 : (_element$resizableTex = element.resizableTextArea) === null || _element$resizableTex === void 0 ? void 0 : _element$resizableTex.textArea;\n    };\n\n    _this.setMeasureRef = function (element) {\n      _this.measure = element;\n    };\n\n    _this.getOptions = function (measureText) {\n      var targetMeasureText = measureText || _this.state.measureText || '';\n      var _this$props3 = _this.props,\n          children = _this$props3.children,\n          filterOption = _this$props3.filterOption;\n      var list = toArray(children).map(function (_ref2) {\n        var props = _ref2.props,\n            key = _ref2.key;\n        return _objectSpread(_objectSpread({}, props), {}, {\n          key: key || props.value\n        });\n      }).filter(function (option) {\n        /** Return all result if `filterOption` is false. */\n        if (filterOption === false) {\n          return true;\n        }\n\n        return filterOption(targetMeasureText, option);\n      });\n      return list;\n    };\n\n    _this.state = {\n      value: props.defaultValue || props.value || '',\n      measuring: false,\n      measureLocation: 0,\n      measureText: null,\n      measurePrefix: '',\n      activeIndex: 0,\n      isFocus: false\n    };\n    return _this;\n  }\n\n  _createClass(Mentions, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var measuring = this.state.measuring; // Sync measure div top with textarea for rc-trigger usage\n\n      if (measuring) {\n        this.measure.scrollTop = this.textarea.scrollTop;\n      }\n    }\n  }, {\n    key: \"startMeasure\",\n    value: function startMeasure(measureText, measurePrefix, measureLocation) {\n      this.setState({\n        measuring: true,\n        measureText: measureText,\n        measurePrefix: measurePrefix,\n        measureLocation: measureLocation,\n        activeIndex: 0\n      });\n    }\n  }, {\n    key: \"stopMeasure\",\n    value: function stopMeasure(callback) {\n      this.setState({\n        measuring: false,\n        measureLocation: 0,\n        measureText: null\n      }, callback);\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.textarea.focus();\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.textarea.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state4 = this.state,\n          value = _this$state4.value,\n          measureLocation = _this$state4.measureLocation,\n          measurePrefix = _this$state4.measurePrefix,\n          measuring = _this$state4.measuring,\n          activeIndex = _this$state4.activeIndex;\n\n      var _this$props4 = this.props,\n          prefixCls = _this$props4.prefixCls,\n          placement = _this$props4.placement,\n          direction = _this$props4.direction,\n          transitionName = _this$props4.transitionName,\n          className = _this$props4.className,\n          style = _this$props4.style,\n          autoFocus = _this$props4.autoFocus,\n          notFoundContent = _this$props4.notFoundContent,\n          getPopupContainer = _this$props4.getPopupContainer,\n          dropdownClassName = _this$props4.dropdownClassName,\n          restProps = _objectWithoutProperties(_this$props4, [\"prefixCls\", \"placement\", \"direction\", \"transitionName\", \"className\", \"style\", \"autoFocus\", \"notFoundContent\", \"getPopupContainer\", \"dropdownClassName\"]);\n\n      var inputProps = omit(restProps, 'value', 'defaultValue', 'prefix', 'split', 'children', 'validateSearch', 'filterOption', 'onSelect', 'onSearch');\n      var options = measuring ? this.getOptions() : [];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(prefixCls, className),\n        style: style\n      }, /*#__PURE__*/React.createElement(TextArea, _extends({\n        autoFocus: autoFocus,\n        ref: this.setTextAreaRef,\n        value: value\n      }, inputProps, {\n        onChange: this.onChange,\n        onKeyDown: this.onKeyDown,\n        onKeyUp: this.onKeyUp,\n        onPressEnter: this.onPressEnter,\n        onFocus: this.onInputFocus,\n        onBlur: this.onInputBlur\n      })), measuring && /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.setMeasureRef,\n        className: \"\".concat(prefixCls, \"-measure\")\n      }, value.slice(0, measureLocation), /*#__PURE__*/React.createElement(MentionsContextProvider, {\n        value: {\n          notFoundContent: notFoundContent,\n          activeIndex: activeIndex,\n          setActiveIndex: this.setActiveIndex,\n          selectOption: this.selectOption,\n          onFocus: this.onDropdownFocus,\n          onBlur: this.onDropdownBlur\n        }\n      }, /*#__PURE__*/React.createElement(KeywordTrigger, {\n        prefixCls: prefixCls,\n        transitionName: transitionName,\n        placement: placement,\n        direction: direction,\n        options: options,\n        visible: true,\n        getPopupContainer: getPopupContainer,\n        dropdownClassName: dropdownClassName\n      }, /*#__PURE__*/React.createElement(\"span\", null, measurePrefix))), value.slice(measureLocation + measurePrefix.length)));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      var newState = {};\n\n      if ('value' in props && props.value !== prevState.value) {\n        newState.value = props.value || '';\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Mentions;\n}(React.Component);\n\nMentions.Option = Option;\nMentions.defaultProps = {\n  prefixCls: 'rc-mentions',\n  prefix: '@',\n  split: ' ',\n  validateSearch: defaultValidateSearch,\n  filterOption: defaultFilterOption,\n  notFoundContent: 'Not Found',\n  rows: 1\n};\nexport default Mentions;","map":{"version":3,"sources":["C:/dev/diploma/movies-explorer-frontend/node_modules/rc-mentions/es/Mentions.js"],"names":["_extends","_objectWithoutProperties","_objectSpread","_classCallCheck","_createClass","_inherits","_createSuper","classNames","toArray","KeyCode","React","TextArea","KeywordTrigger","MentionsContextProvider","Option","filterOption","defaultFilterOption","getBeforeSelectionText","getLastMeasureIndex","omit","replaceWithMeasure","setInputSelection","validateSearch","defaultValidateSearch","Mentions","_React$Component","_super","props","_this","call","focusId","undefined","triggerChange","value","onChange","setState","_ref","target","onKeyDown","event","which","_this$state","state","activeIndex","measuring","clientOnKeyDown","UP","DOWN","optionLen","getOptions","length","offset","newActiveIndex","preventDefault","ESC","stopMeasure","ENTER","options","option","selectOption","onKeyUp","key","_this$state2","prevMeasureText","measureText","_this$props","_this$props$prefix","prefix","clientOnKeyUp","onSearch","selectionStartText","_getLastMeasureIndex","measureIndex","location","measurePrefix","indexOf","slice","validateMeasure","matchOption","startMeasure","onPressEnter","onInputFocus","onFocus","onInputBlur","onBlur","onDropdownFocus","onDropdownBlur","window","clearTimeout","isFocus","setTimeout","_this$state3","measureLocation","_this$props2","split","onSelect","_option$value","mentionValue","_replaceWithMeasure","targetText","selectionStart","textarea","text","selectionLocation","setActiveIndex","setTextAreaRef","element","_element$resizableTex","resizableTextArea","textArea","setMeasureRef","measure","targetMeasureText","_this$props3","children","list","map","_ref2","filter","defaultValue","componentDidUpdate","scrollTop","callback","focus","blur","render","_this$state4","_this$props4","prefixCls","placement","direction","transitionName","className","style","autoFocus","notFoundContent","getPopupContainer","dropdownClassName","restProps","inputProps","createElement","ref","concat","visible","getDerivedStateFromProps","prevState","newState","Component","defaultProps","rows"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport * as React from 'react';\nimport TextArea from 'rc-textarea';\nimport KeywordTrigger from './KeywordTrigger';\nimport { MentionsContextProvider } from './MentionsContext';\nimport Option from './Option';\nimport { filterOption as defaultFilterOption, getBeforeSelectionText, getLastMeasureIndex, omit, replaceWithMeasure, setInputSelection, validateSearch as defaultValidateSearch } from './util';\n\nvar Mentions = /*#__PURE__*/function (_React$Component) {\n  _inherits(Mentions, _React$Component);\n\n  var _super = _createSuper(Mentions);\n\n  function Mentions(props) {\n    var _this;\n\n    _classCallCheck(this, Mentions);\n\n    _this = _super.call(this, props);\n    _this.focusId = undefined;\n\n    _this.triggerChange = function (value) {\n      var onChange = _this.props.onChange;\n\n      if (!('value' in _this.props)) {\n        _this.setState({\n          value: value\n        });\n      }\n\n      if (onChange) {\n        onChange(value);\n      }\n    };\n\n    _this.onChange = function (_ref) {\n      var value = _ref.target.value;\n\n      _this.triggerChange(value);\n    }; // Check if hit the measure keyword\n\n\n    _this.onKeyDown = function (event) {\n      var which = event.which;\n      var _this$state = _this.state,\n          activeIndex = _this$state.activeIndex,\n          measuring = _this$state.measuring;\n      var clientOnKeyDown = _this.props.onKeyDown;\n\n      if (clientOnKeyDown) {\n        clientOnKeyDown(event);\n      } // Skip if not measuring\n\n\n      if (!measuring) {\n        return;\n      }\n\n      if (which === KeyCode.UP || which === KeyCode.DOWN) {\n        // Control arrow function\n        var optionLen = _this.getOptions().length;\n\n        var offset = which === KeyCode.UP ? -1 : 1;\n        var newActiveIndex = (activeIndex + offset + optionLen) % optionLen;\n\n        _this.setState({\n          activeIndex: newActiveIndex\n        });\n\n        event.preventDefault();\n      } else if (which === KeyCode.ESC) {\n        _this.stopMeasure();\n      } else if (which === KeyCode.ENTER) {\n        // Measure hit\n        event.preventDefault();\n\n        var options = _this.getOptions();\n\n        if (!options.length) {\n          _this.stopMeasure();\n\n          return;\n        }\n\n        var option = options[activeIndex];\n\n        _this.selectOption(option);\n      }\n    };\n    /**\n     * When to start measure:\n     * 1. When user press `prefix`\n     * 2. When measureText !== prevMeasureText\n     *  - If measure hit\n     *  - If measuring\n     *\n     * When to stop measure:\n     * 1. Selection is out of range\n     * 2. Contains `space`\n     * 3. ESC or select one\n     */\n\n\n    _this.onKeyUp = function (event) {\n      var key = event.key,\n          which = event.which;\n      var _this$state2 = _this.state,\n          prevMeasureText = _this$state2.measureText,\n          measuring = _this$state2.measuring;\n      var _this$props = _this.props,\n          _this$props$prefix = _this$props.prefix,\n          prefix = _this$props$prefix === void 0 ? '' : _this$props$prefix,\n          clientOnKeyUp = _this$props.onKeyUp,\n          onSearch = _this$props.onSearch,\n          validateSearch = _this$props.validateSearch;\n      var target = event.target;\n      var selectionStartText = getBeforeSelectionText(target);\n\n      var _getLastMeasureIndex = getLastMeasureIndex(selectionStartText, prefix),\n          measureIndex = _getLastMeasureIndex.location,\n          measurePrefix = _getLastMeasureIndex.prefix; // If the client implements an onKeyUp handler, call it\n\n\n      if (clientOnKeyUp) {\n        clientOnKeyUp(event);\n      } // Skip if match the white key list\n\n\n      if ([KeyCode.ESC, KeyCode.UP, KeyCode.DOWN, KeyCode.ENTER].indexOf(which) !== -1) {\n        return;\n      }\n\n      if (measureIndex !== -1) {\n        var measureText = selectionStartText.slice(measureIndex + measurePrefix.length);\n        var validateMeasure = validateSearch(measureText, _this.props);\n        var matchOption = !!_this.getOptions(measureText).length;\n\n        if (validateMeasure) {\n          if (key === measurePrefix || key === 'Shift' || measuring || measureText !== prevMeasureText && matchOption) {\n            _this.startMeasure(measureText, measurePrefix, measureIndex);\n          }\n        } else if (measuring) {\n          // Stop if measureText is invalidate\n          _this.stopMeasure();\n        }\n        /**\n         * We will trigger `onSearch` to developer since they may use for async update.\n         * If met `space` means user finished searching.\n         */\n\n\n        if (onSearch && validateMeasure) {\n          onSearch(measureText, measurePrefix);\n        }\n      } else if (measuring) {\n        _this.stopMeasure();\n      }\n    };\n\n    _this.onPressEnter = function (event) {\n      var measuring = _this.state.measuring;\n      var onPressEnter = _this.props.onPressEnter;\n\n      if (!measuring && onPressEnter) {\n        onPressEnter(event);\n      }\n    };\n\n    _this.onInputFocus = function (event) {\n      _this.onFocus(event);\n    };\n\n    _this.onInputBlur = function (event) {\n      _this.onBlur(event);\n    };\n\n    _this.onDropdownFocus = function () {\n      _this.onFocus();\n    };\n\n    _this.onDropdownBlur = function () {\n      _this.onBlur();\n    };\n\n    _this.onFocus = function (event) {\n      window.clearTimeout(_this.focusId);\n      var isFocus = _this.state.isFocus;\n      var onFocus = _this.props.onFocus;\n\n      if (!isFocus && event && onFocus) {\n        onFocus(event);\n      }\n\n      _this.setState({\n        isFocus: true\n      });\n    };\n\n    _this.onBlur = function (event) {\n      _this.focusId = window.setTimeout(function () {\n        var onBlur = _this.props.onBlur;\n\n        _this.setState({\n          isFocus: false\n        });\n\n        _this.stopMeasure();\n\n        if (onBlur) {\n          onBlur(event);\n        }\n      }, 0);\n    };\n\n    _this.selectOption = function (option) {\n      var _this$state3 = _this.state,\n          value = _this$state3.value,\n          measureLocation = _this$state3.measureLocation,\n          measurePrefix = _this$state3.measurePrefix;\n      var _this$props2 = _this.props,\n          split = _this$props2.split,\n          onSelect = _this$props2.onSelect;\n      var _option$value = option.value,\n          mentionValue = _option$value === void 0 ? '' : _option$value;\n\n      var _replaceWithMeasure = replaceWithMeasure(value, {\n        measureLocation: measureLocation,\n        targetText: mentionValue,\n        prefix: measurePrefix,\n        selectionStart: _this.textarea.selectionStart,\n        split: split\n      }),\n          text = _replaceWithMeasure.text,\n          selectionLocation = _replaceWithMeasure.selectionLocation;\n\n      _this.triggerChange(text);\n\n      _this.stopMeasure(function () {\n        // We need restore the selection position\n        setInputSelection(_this.textarea, selectionLocation);\n      });\n\n      if (onSelect) {\n        onSelect(option, measurePrefix);\n      }\n    };\n\n    _this.setActiveIndex = function (activeIndex) {\n      _this.setState({\n        activeIndex: activeIndex\n      });\n    };\n\n    _this.setTextAreaRef = function (element) {\n      var _element$resizableTex;\n\n      _this.textarea = element === null || element === void 0 ? void 0 : (_element$resizableTex = element.resizableTextArea) === null || _element$resizableTex === void 0 ? void 0 : _element$resizableTex.textArea;\n    };\n\n    _this.setMeasureRef = function (element) {\n      _this.measure = element;\n    };\n\n    _this.getOptions = function (measureText) {\n      var targetMeasureText = measureText || _this.state.measureText || '';\n      var _this$props3 = _this.props,\n          children = _this$props3.children,\n          filterOption = _this$props3.filterOption;\n      var list = toArray(children).map(function (_ref2) {\n        var props = _ref2.props,\n            key = _ref2.key;\n        return _objectSpread(_objectSpread({}, props), {}, {\n          key: key || props.value\n        });\n      }).filter(function (option) {\n        /** Return all result if `filterOption` is false. */\n        if (filterOption === false) {\n          return true;\n        }\n\n        return filterOption(targetMeasureText, option);\n      });\n      return list;\n    };\n\n    _this.state = {\n      value: props.defaultValue || props.value || '',\n      measuring: false,\n      measureLocation: 0,\n      measureText: null,\n      measurePrefix: '',\n      activeIndex: 0,\n      isFocus: false\n    };\n    return _this;\n  }\n\n  _createClass(Mentions, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var measuring = this.state.measuring; // Sync measure div top with textarea for rc-trigger usage\n\n      if (measuring) {\n        this.measure.scrollTop = this.textarea.scrollTop;\n      }\n    }\n  }, {\n    key: \"startMeasure\",\n    value: function startMeasure(measureText, measurePrefix, measureLocation) {\n      this.setState({\n        measuring: true,\n        measureText: measureText,\n        measurePrefix: measurePrefix,\n        measureLocation: measureLocation,\n        activeIndex: 0\n      });\n    }\n  }, {\n    key: \"stopMeasure\",\n    value: function stopMeasure(callback) {\n      this.setState({\n        measuring: false,\n        measureLocation: 0,\n        measureText: null\n      }, callback);\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.textarea.focus();\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.textarea.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state4 = this.state,\n          value = _this$state4.value,\n          measureLocation = _this$state4.measureLocation,\n          measurePrefix = _this$state4.measurePrefix,\n          measuring = _this$state4.measuring,\n          activeIndex = _this$state4.activeIndex;\n\n      var _this$props4 = this.props,\n          prefixCls = _this$props4.prefixCls,\n          placement = _this$props4.placement,\n          direction = _this$props4.direction,\n          transitionName = _this$props4.transitionName,\n          className = _this$props4.className,\n          style = _this$props4.style,\n          autoFocus = _this$props4.autoFocus,\n          notFoundContent = _this$props4.notFoundContent,\n          getPopupContainer = _this$props4.getPopupContainer,\n          dropdownClassName = _this$props4.dropdownClassName,\n          restProps = _objectWithoutProperties(_this$props4, [\"prefixCls\", \"placement\", \"direction\", \"transitionName\", \"className\", \"style\", \"autoFocus\", \"notFoundContent\", \"getPopupContainer\", \"dropdownClassName\"]);\n\n      var inputProps = omit(restProps, 'value', 'defaultValue', 'prefix', 'split', 'children', 'validateSearch', 'filterOption', 'onSelect', 'onSearch');\n      var options = measuring ? this.getOptions() : [];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(prefixCls, className),\n        style: style\n      }, /*#__PURE__*/React.createElement(TextArea, _extends({\n        autoFocus: autoFocus,\n        ref: this.setTextAreaRef,\n        value: value\n      }, inputProps, {\n        onChange: this.onChange,\n        onKeyDown: this.onKeyDown,\n        onKeyUp: this.onKeyUp,\n        onPressEnter: this.onPressEnter,\n        onFocus: this.onInputFocus,\n        onBlur: this.onInputBlur\n      })), measuring && /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.setMeasureRef,\n        className: \"\".concat(prefixCls, \"-measure\")\n      }, value.slice(0, measureLocation), /*#__PURE__*/React.createElement(MentionsContextProvider, {\n        value: {\n          notFoundContent: notFoundContent,\n          activeIndex: activeIndex,\n          setActiveIndex: this.setActiveIndex,\n          selectOption: this.selectOption,\n          onFocus: this.onDropdownFocus,\n          onBlur: this.onDropdownBlur\n        }\n      }, /*#__PURE__*/React.createElement(KeywordTrigger, {\n        prefixCls: prefixCls,\n        transitionName: transitionName,\n        placement: placement,\n        direction: direction,\n        options: options,\n        visible: true,\n        getPopupContainer: getPopupContainer,\n        dropdownClassName: dropdownClassName\n      }, /*#__PURE__*/React.createElement(\"span\", null, measurePrefix))), value.slice(measureLocation + measurePrefix.length)));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      var newState = {};\n\n      if ('value' in props && props.value !== prevState.value) {\n        newState.value = props.value || '';\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Mentions;\n}(React.Component);\n\nMentions.Option = Option;\nMentions.defaultProps = {\n  prefixCls: 'rc-mentions',\n  prefix: '@',\n  split: ' ',\n  validateSearch: defaultValidateSearch,\n  filterOption: defaultFilterOption,\n  notFoundContent: 'Not Found',\n  rows: 1\n};\nexport default Mentions;"]},"metadata":{},"sourceType":"module"}