{"ast":null,"code":"export class MainApi {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _getResponseData(response) {\n    return response.then((res, req) => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      if (res.status === 409 || res.status === 404 || res.status === 400) {\n        return Promise.reject({\n          status: res.status,\n          text: res.statusText\n        });\n      }\n\n      return Promise.reject(new Error(`Ошибка получения данных: ${res.status} ${res.statusText}`));\n    });\n  }\n\n  createMovie(data) {\n    const token = localStorage.getItem(\"token\");\n    return this._getResponseData(fetch(`${this._baseUrl}/movies`, {\n      method: \"POST\",\n      headers: { ...this._headers,\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        country: data.country,\n        director: data.director,\n        duration: data.duration,\n        year: data.year,\n        description: data.description,\n        image: data.image,\n        trailer: data.trailer,\n        thumbnail: data.image,\n        movieId: data.id,\n        nameRU: data.nameRU,\n        nameEN: data.nameEN\n      })\n    }));\n  }\n\n}\nconst mainApi = new MainApi({\n  baseUrl: \"http://localhost:3001\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default mainApi;","map":{"version":3,"sources":["C:/dev/diploma/movies-explorer-frontend/src/utils/MainApi.js"],"names":["MainApi","constructor","options","_baseUrl","baseUrl","_headers","headers","_getResponseData","response","then","res","req","ok","json","status","Promise","reject","text","statusText","Error","createMovie","data","token","localStorage","getItem","fetch","method","Authorization","body","JSON","stringify","country","director","duration","year","description","image","trailer","thumbnail","movieId","id","nameRU","nameEN","mainApi"],"mappings":"AAAA,OAAO,MAAMA,OAAN,CAAc;AACjBC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACrB,SAAKC,QAAL,GAAgBD,OAAO,CAACE,OAAxB;AACA,SAAKC,QAAL,GAAgBH,OAAO,CAACI,OAAxB;AACH;;AAEDC,EAAAA,gBAAgB,CAACC,QAAD,EAAW;AACvB,WAAOA,QAAQ,CAACC,IAAT,CAAc,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC/B,UAAID,GAAG,CAACE,EAAR,EAAY;AACZ,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACC;;AACD,UAAIH,GAAG,CAACI,MAAJ,KAAe,GAAf,IAAsBJ,GAAG,CAACI,MAAJ,KAAe,GAArC,IAA4CJ,GAAG,CAACI,MAAJ,KAAe,GAA/D,EAAoE;AAChE,eAAOC,OAAO,CAACC,MAAR,CAAe;AACtBF,UAAAA,MAAM,EAAEJ,GAAG,CAACI,MADU;AAEtBG,UAAAA,IAAI,EAAEP,GAAG,CAACQ;AAFY,SAAf,CAAP;AAIH;;AACD,aAAOH,OAAO,CAACC,MAAR,CACH,IAAIG,KAAJ,CAAW,4BAA2BT,GAAG,CAACI,MAAO,IAAGJ,GAAG,CAACQ,UAAW,EAAnE,CADG,CAAP;AAGH,KAbM,CAAP;AAcC;;AAELE,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,WAAO,KAAKjB,gBAAL,CACHkB,KAAK,CAAE,GAAE,KAAKtB,QAAS,SAAlB,EAA4B;AACjCuB,MAAAA,MAAM,EAAE,MADyB;AAEjCpB,MAAAA,OAAO,EAAE,EACL,GAAG,KAAKD,QADH;AAELsB,QAAAA,aAAa,EAAG,UAASL,KAAM;AAF1B,OAFwB;AAMjCM,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,OAAO,EAAEV,IAAI,CAACU,OADG;AAEjBC,QAAAA,QAAQ,EAAEX,IAAI,CAACW,QAFE;AAGjBC,QAAAA,QAAQ,EAAEZ,IAAI,CAACY,QAHE;AAIjBC,QAAAA,IAAI,EAAEb,IAAI,CAACa,IAJM;AAKjBC,QAAAA,WAAW,EAAEd,IAAI,CAACc,WALD;AAMjBC,QAAAA,KAAK,EAAEf,IAAI,CAACe,KANK;AAOjBC,QAAAA,OAAO,EAAEhB,IAAI,CAACgB,OAPG;AAQjBC,QAAAA,SAAS,EAAEjB,IAAI,CAACe,KARC;AASjBG,QAAAA,OAAO,EAAElB,IAAI,CAACmB,EATG;AAUjBC,QAAAA,MAAM,EAAEpB,IAAI,CAACoB,MAVI;AAWjBC,QAAAA,MAAM,EAAErB,IAAI,CAACqB;AAXI,OAAf;AAN2B,KAA5B,CADF,CAAP;AAsBC;;AA/CgB;AAkDrB,MAAMC,OAAO,GAAG,IAAI3C,OAAJ,CAAY;AACxBI,EAAAA,OAAO,EAAE,uBADe;AAExBE,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AAFe,CAAZ,CAAhB;AAOA,eAAeqC,OAAf","sourcesContent":["export class MainApi {\r\n    constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n    this._headers = options.headers;\r\n}\r\n\r\n_getResponseData(response) {\r\n    return response.then((res, req) => {\r\n        if (res.ok) {\r\n        return res.json();\r\n        }\r\n        if (res.status === 409 || res.status === 404 || res.status === 400) {\r\n            return Promise.reject({\r\n            status: res.status,\r\n            text: res.statusText,\r\n            });\r\n        }\r\n        return Promise.reject(\r\n            new Error(`Ошибка получения данных: ${res.status} ${res.statusText}`)\r\n        );\r\n    });\r\n    }\r\n\r\ncreateMovie(data) {\r\n    const token = localStorage.getItem(\"token\");\r\n    return this._getResponseData(\r\n        fetch(`${this._baseUrl}/movies`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            ...this._headers,\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n            country: data.country,\r\n            director: data.director,\r\n            duration: data.duration,\r\n            year: data.year,\r\n            description: data.description,\r\n            image: data.image,\r\n            trailer: data.trailer,\r\n            thumbnail: data.image,\r\n            movieId: data.id,\r\n            nameRU: data.nameRU,\r\n            nameEN: data.nameEN,\r\n        }),\r\n        })\r\n    );\r\n    }\r\n}\r\n\r\nconst mainApi = new MainApi({\r\n    baseUrl: \"http://localhost:3001\",\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n    },\r\n});\r\n\r\nexport default mainApi;"]},"metadata":{},"sourceType":"module"}