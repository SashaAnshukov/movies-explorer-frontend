{"ast":null,"code":"import * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nvar ESC = KeyCode.ESC,\n    TAB = KeyCode.TAB;\nexport default function useAccessibility(_ref) {\n  var visible = _ref.visible,\n      setTriggerVisible = _ref.setTriggerVisible,\n      triggerRef = _ref.triggerRef,\n      menuRef = _ref.menuRef,\n      onVisibleChange = _ref.onVisibleChange;\n  var focusMenuRef = React.useRef(false);\n\n  var handleCloseMenuAndReturnFocus = function handleCloseMenuAndReturnFocus() {\n    if (visible && triggerRef.current) {\n      var _triggerRef$current, _triggerRef$current$t, _triggerRef$current$t2, _triggerRef$current$t3;\n\n      (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : (_triggerRef$current$t = _triggerRef$current.triggerRef) === null || _triggerRef$current$t === void 0 ? void 0 : (_triggerRef$current$t2 = _triggerRef$current$t.current) === null || _triggerRef$current$t2 === void 0 ? void 0 : (_triggerRef$current$t3 = _triggerRef$current$t2.focus) === null || _triggerRef$current$t3 === void 0 ? void 0 : _triggerRef$current$t3.call(_triggerRef$current$t2);\n      setTriggerVisible(false);\n\n      if (typeof onVisibleChange === 'function') {\n        onVisibleChange(false);\n      }\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var _menuRef$current;\n\n    switch (event.keyCode) {\n      case ESC:\n        handleCloseMenuAndReturnFocus();\n        break;\n\n      case TAB:\n        if (!focusMenuRef.current && ((_menuRef$current = menuRef.current) === null || _menuRef$current === void 0 ? void 0 : _menuRef$current.focus)) {\n          event.preventDefault();\n          menuRef.current.focus();\n          focusMenuRef.current = true;\n        } else {\n          handleCloseMenuAndReturnFocus();\n        }\n\n        break;\n    }\n  };\n\n  React.useEffect(function () {\n    if (visible) {\n      window.addEventListener('keydown', handleKeyDown);\n      return function () {\n        window.removeEventListener('keydown', handleKeyDown);\n        focusMenuRef.current = false;\n      };\n    }\n\n    return function () {\n      return null;\n    };\n  }, [visible]); // eslint-disable-line react-hooks/exhaustive-deps\n}","map":{"version":3,"sources":["C:/dev/diploma/movies-explorer-frontend/node_modules/rc-dropdown/es/hooks/useAccessibility.js"],"names":["React","KeyCode","ESC","TAB","useAccessibility","_ref","visible","setTriggerVisible","triggerRef","menuRef","onVisibleChange","focusMenuRef","useRef","handleCloseMenuAndReturnFocus","current","_triggerRef$current","_triggerRef$current$t","_triggerRef$current$t2","_triggerRef$current$t3","focus","call","handleKeyDown","event","_menuRef$current","keyCode","preventDefault","useEffect","window","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nvar ESC = KeyCode.ESC,\n    TAB = KeyCode.TAB;\nexport default function useAccessibility(_ref) {\n  var visible = _ref.visible,\n      setTriggerVisible = _ref.setTriggerVisible,\n      triggerRef = _ref.triggerRef,\n      menuRef = _ref.menuRef,\n      onVisibleChange = _ref.onVisibleChange;\n  var focusMenuRef = React.useRef(false);\n\n  var handleCloseMenuAndReturnFocus = function handleCloseMenuAndReturnFocus() {\n    if (visible && triggerRef.current) {\n      var _triggerRef$current, _triggerRef$current$t, _triggerRef$current$t2, _triggerRef$current$t3;\n\n      (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : (_triggerRef$current$t = _triggerRef$current.triggerRef) === null || _triggerRef$current$t === void 0 ? void 0 : (_triggerRef$current$t2 = _triggerRef$current$t.current) === null || _triggerRef$current$t2 === void 0 ? void 0 : (_triggerRef$current$t3 = _triggerRef$current$t2.focus) === null || _triggerRef$current$t3 === void 0 ? void 0 : _triggerRef$current$t3.call(_triggerRef$current$t2);\n      setTriggerVisible(false);\n\n      if (typeof onVisibleChange === 'function') {\n        onVisibleChange(false);\n      }\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var _menuRef$current;\n\n    switch (event.keyCode) {\n      case ESC:\n        handleCloseMenuAndReturnFocus();\n        break;\n\n      case TAB:\n        if (!focusMenuRef.current && ((_menuRef$current = menuRef.current) === null || _menuRef$current === void 0 ? void 0 : _menuRef$current.focus)) {\n          event.preventDefault();\n          menuRef.current.focus();\n          focusMenuRef.current = true;\n        } else {\n          handleCloseMenuAndReturnFocus();\n        }\n\n        break;\n    }\n  };\n\n  React.useEffect(function () {\n    if (visible) {\n      window.addEventListener('keydown', handleKeyDown);\n      return function () {\n        window.removeEventListener('keydown', handleKeyDown);\n        focusMenuRef.current = false;\n      };\n    }\n\n    return function () {\n      return null;\n    };\n  }, [visible]); // eslint-disable-line react-hooks/exhaustive-deps\n}"]},"metadata":{},"sourceType":"module"}