{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\diploma\\\\movies-explorer-frontend\\\\src\\\\components\\\\MoviesCard\\\\MoviesCard.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MoviesCard(_ref) {\n  _s();\n\n  let {\n    onCardClick,\n    onCardLike,\n    onCardDelete,\n    card\n  } = _ref;\n  const currentUser = useContext(CurrentUserContext);\n  const {\n    nameRU,\n    image\n  } = card; /// Определяем, являемся ли мы владельцем текущей карточки\n  //const isOwn = card.owner === currentUser.id;\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\n\n  /*const cardDeleteButtonClassName = (\r\n      `rectangle__trash ${isOwn ? 'rectangle__trash opacity-buttons' : 'rectangle__trash_hidden'}`\r\n  ); */\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  //const isLiked = card.likes.some((i) => i === currentUser.id);\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\n\n  /*const cardLikeButtonClassName = (\r\n       `rectangle__mesto-like ${isLiked ? 'rectangle__mesto-like_active opacity-like' : ''}`\r\n   );*/\n\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rectangle-item-template\",\n    children: /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"MoviesCard\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"MoviesCard__image\",\n        onClick: handleClick,\n        src: card.image,\n        alt: card.nameRU\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MoviesCard__info\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"MoviesCard__text\",\n          children: card.nameRU\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 17\n  }, this);\n}\n\n_s(MoviesCard, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = MoviesCard;\nexport default MoviesCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesCard\");","map":{"version":3,"sources":["C:/dev/diploma/movies-explorer-frontend/src/components/MoviesCard/MoviesCard.js"],"names":["useContext","CurrentUserContext","MoviesCard","onCardClick","onCardLike","onCardDelete","card","currentUser","nameRU","image","handleClick"],"mappings":";;;AAAA,SAAQA,UAAR,QAAyB,OAAzB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;;;AAEA,SAASC,UAAT,OAAmE;AAAA;;AAAA,MAA/C;AAACC,IAAAA,WAAD;AAAcC,IAAAA,UAAd;AAA0BC,IAAAA,YAA1B;AAAwCC,IAAAA;AAAxC,GAA+C;AAC/D,QAAMC,WAAW,GAAGP,UAAU,CAACC,kBAAD,CAA9B;AACA,QAAM;AAAEO,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoBH,IAA1B,CAF+D,CAG/D;AACA;AACA;;AACA;AACJ;AACA;AACI;AACA;AACA;;AACD;AACH;AACA;;AAEI,WAASI,WAAT,GAAuB;AACnBP,IAAAA,WAAW,CAACG,IAAD,CAAX;AACH;;AAGD,sBACY;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA,2BACI;AAAS,MAAA,SAAS,EAAC,YAAnB;AAAA,8BACI;AACI,QAAA,SAAS,EAAC,mBADd;AACkC,QAAA,OAAO,EAAEI,WAD3C;AAEI,QAAA,GAAG,EAAEJ,IAAI,CAACG,KAFd;AAEqB,QAAA,GAAG,EAAEH,IAAI,CAACE;AAF/B;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACI;AAAI,UAAA,SAAS,EAAC,kBAAd;AAAA,oBAAkCF,IAAI,CAACE;AAAvC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADZ;AAmBH;;GAxCQN,U;;KAAAA,U;AA0CT,eAAeA,UAAf","sourcesContent":["import {useContext} from 'react';\r\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\r\n\r\nfunction MoviesCard({onCardClick, onCardLike, onCardDelete, card}) {\r\n    const currentUser = useContext(CurrentUserContext);\r\n    const { nameRU, image } = card;\r\n    /// Определяем, являемся ли мы владельцем текущей карточки\r\n    //const isOwn = card.owner === currentUser.id;\r\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n    /*const cardDeleteButtonClassName = (\r\n        `rectangle__trash ${isOwn ? 'rectangle__trash opacity-buttons' : 'rectangle__trash_hidden'}`\r\n    ); */\r\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n    //const isLiked = card.likes.some((i) => i === currentUser.id);\r\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n   /*const cardLikeButtonClassName = (\r\n        `rectangle__mesto-like ${isLiked ? 'rectangle__mesto-like_active opacity-like' : ''}`\r\n    );*/\r\n\r\n    function handleClick() {\r\n        onCardClick(card);\r\n    }\r\n\r\n\r\n    return (\r\n                <div className=\"rectangle-item-template\">\r\n                    <article className=\"MoviesCard\">\r\n                        <img \r\n                            className=\"MoviesCard__image\" onClick={handleClick}\r\n                            src={card.image} alt={card.nameRU}/>\r\n                        \r\n                        <div className=\"MoviesCard__info\">\r\n                            <h2 className=\"MoviesCard__text\">{card.nameRU}</h2>\r\n                            \r\n\r\n\r\n\r\n\r\n                            \r\n                        </div>\r\n                    </article>\r\n                </div>\r\n    );\r\n}\r\n\r\nexport default MoviesCard;"]},"metadata":{},"sourceType":"module"}