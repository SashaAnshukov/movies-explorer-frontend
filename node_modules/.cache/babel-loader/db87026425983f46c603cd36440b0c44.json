{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\diploma\\\\movies-explorer-frontend\\\\src\\\\components\\\\Movies\\\\Movies.js\",\n    _s = $RefreshSig$();\n\nimport MoviesCard from '../MoviesCard/MoviesCard';\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\nimport { useState, useEffect } from 'react';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Movies(_ref) {\n  _s();\n\n  let {\n    onCardClick,\n    onCardLike,\n    onCardDelete\n  } = _ref;\n  const currentUser = useContext(CurrentUserContext);\n  const apiURL = 'https://api.nomoreparties.co/beatfilm-movies';\n  const [cards, setCards] = useState([]);\n  const [filteredCards, setFilteredCards] = useState([]);\n  const [shortCards, setShortCards] = useState(false);\n  const [query, setQuery] = useState('');\n\n  const updateMovies = cards => {\n    setCards(cards);\n    localStorage.setItem('all_filtered_movies', JSON.stringify(cards));\n  };\n\n  const updateFilteredMovies = cards => {\n    setFilteredCards(cards);\n    localStorage.setItem('all_movies', JSON.stringify(cards));\n  };\n\n  const updateShortCards = shortCards => {\n    setShortCards(shortCards);\n    localStorage.setItem('all_shortCards', JSON.stringify(shortCards));\n  };\n\n  const updateQuery = query => {\n    query = query.toLowerCase();\n    setQuery(query);\n    localStorage.setItem('all_query', query);\n  };\n\n  console.log([cards]);\n  useEffect(() => {\n    const cards = JSON.parse(localStorage.getItem('all_movies') || '[]');\n    updateMovies(cards);\n    updateFilteredMovies(JSON.parse(localStorage.getItem('all_filtered_movies') || '[]'));\n    updateQuery(localStorage.getItem('all_query') || '');\n    updateShortCards(JSON.parse(localStorage.getItem('all_short_movies') || 'false'));\n\n    if (!cards.length) {\n      fetch(apiURL, {\n        headers: {\n          //'Accept': 'application/json',\n          'Content-Type': 'aplication/json'\n        }\n      }).then(res => res.json()).then(res => {\n        updateMovies(res);\n        updateFilteredMovies([]);\n      });\n    } else {\n      //console.log({cards});\n      setCards(cards);\n    }\n\n    const filteredCards = JSON.parse(localStorage.getItem('filtered_all_movies') || '[]');\n\n    if (cards.length) {\n      setFilteredCards(filteredCards);\n    }\n\n    const shortCards = JSON.parse(localStorage.getItem('all_short_movies') || 'false');\n    setShortCards(shortCards);\n    setQuery(localStorage.getItem('all_query') || '');\n  }, []);\n\n  const handleSubmit = e => {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    if (query.length) {\n      const filteredCards = cards.filter(card => card.nameRU.toLowerCase().indexOf(query) >= 0);\n      updateFilteredMovies(filteredCards);\n    } else {\n      updateFilteredMovies(cards);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: query,\n          onChange: event => updateQuery(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: shortCards,\n          onChange: () => updateShortCards(!shortCards)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"elements\",\n        children: filteredCards.filter(card => !shortCards || card.duration <= 40).map(card => {\n          return /*#__PURE__*/_jsxDEV(MoviesCard, {\n            onCardClick: onCardClick,\n            onCardLike: onCardLike,\n            onCardDelete: onCardDelete,\n            card: card\n          }, card.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Movies, \"nDsP5OA4kUJ/F91dMFO48biQFCk=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["C:/dev/diploma/movies-explorer-frontend/src/components/Movies/Movies.js"],"names":["MoviesCard","CurrentUserContext","useState","useEffect","useContext","Movies","onCardClick","onCardLike","onCardDelete","currentUser","apiURL","cards","setCards","filteredCards","setFilteredCards","shortCards","setShortCards","query","setQuery","updateMovies","localStorage","setItem","JSON","stringify","updateFilteredMovies","updateShortCards","updateQuery","toLowerCase","console","log","parse","getItem","length","fetch","headers","then","res","json","handleSubmit","e","preventDefault","filter","card","nameRU","indexOf","event","target","value","duration","map","id"],"mappings":"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","sourcesContent":["import MoviesCard from '../MoviesCard/MoviesCard';\r\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\r\nimport {useState, useEffect} from 'react';\r\nimport {useContext} from 'react';\r\n\r\nfunction Movies(\r\n{onCardClick, onCardLike, onCardDelete}) {\r\n\r\n    const currentUser = useContext(CurrentUserContext);\r\n\r\n\r\n    const apiURL = 'https://api.nomoreparties.co/beatfilm-movies'\r\n    const [cards, setCards] = useState([]);\r\n    const [filteredCards, setFilteredCards] = useState([]);\r\n    const [shortCards, setShortCards] = useState(false);\r\n    const [query, setQuery] = useState('');\r\n\r\n    const updateMovies = (cards) => {\r\n        setCards(cards)\r\n        localStorage.setItem('all_filtered_movies', JSON.stringify(cards));\r\n    }\r\n\r\n    const updateFilteredMovies = (cards) => {\r\n        setFilteredCards(cards)\r\n        localStorage.setItem('all_movies', JSON.stringify(cards));\r\n    }\r\n\r\n    const updateShortCards = (shortCards) => {\r\n        setShortCards(shortCards)\r\n        localStorage.setItem('all_shortCards', JSON.stringify(shortCards));\r\n    }\r\n\r\n    const updateQuery = (query) => {\r\n        query = query.toLowerCase();\r\n        setQuery(query)\r\n        localStorage.setItem('all_query', query);\r\n    }\r\n\r\n    console.log ([cards]);\r\n\r\n    useEffect (() => {\r\n        const cards = JSON.parse(localStorage.getItem('all_movies') || '[]');\r\n        updateMovies(cards);\r\n        updateFilteredMovies(\r\n            JSON.parse(localStorage.getItem('all_filtered_movies') || '[]')\r\n        );\r\n        updateQuery(localStorage.getItem('all_query') || '');\r\n        updateShortCards(\r\n            JSON.parse(localStorage.getItem('all_short_movies') || 'false')\r\n        );\r\n\r\n        if (!cards.length) {\r\n        fetch (apiURL, {\r\n            headers: {\r\n                //'Accept': 'application/json',\r\n                'Content-Type': 'aplication/json'\r\n            },\r\n        })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n            updateMovies(res);\r\n            updateFilteredMovies([]);\r\n        });\r\n        } else {\r\n            //console.log({cards});\r\n            setCards(cards);\r\n        }\r\n        const filteredCards = JSON.parse(localStorage.getItem('filtered_all_movies') || '[]');\r\n        if (cards.length) {\r\n            setFilteredCards(filteredCards)\r\n        }\r\n        \r\n        const shortCards = JSON.parse(localStorage.getItem('all_short_movies') || 'false');\r\n        setShortCards (shortCards);\r\n\r\n        setQuery(localStorage.getItem('all_query') || '');\r\n\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        // Запрещаем браузеру переходить по адресу формы\r\n        e.preventDefault();\r\n\r\n        if (query.length){\r\n            const filteredCards = cards.filter (\r\n                card => card.nameRU.toLowerCase().indexOf(query) >= 0\r\n            );\r\n            updateFilteredMovies(filteredCards);\r\n        } else {\r\n            updateFilteredMovies(cards)\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"page__container\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\"  value ={query} onChange = {(event)=> updateQuery(event.target.value)} />\r\n                    <input type=\"checkbox\" checked={shortCards} onChange={ ()=> updateShortCards (!shortCards)}/>\r\n                    <button type=\"submit\">Поиск</button>\r\n                </form>\r\n                <section className=\"elements\">\r\n                    {filteredCards\r\n                    .filter((card) => !shortCards || card.duration <= 40)\r\n                    .map (card => {\r\n                        return <MoviesCard \r\n                            onCardClick = {onCardClick} onCardLike = {onCardLike}\r\n                            onCardDelete ={onCardDelete} card={card} key = {card.id}/>\r\n                    })}\r\n                </section>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Movies;"]},"metadata":{},"sourceType":"module"}