{"ast":null,"code":"/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n'use strict';\n/**\n * Module dependencies.\n * @private\n */\n\nvar Route = require('./route');\n\nvar Layer = require('./layer');\n\nvar methods = require('methods');\n\nvar mixin = require('utils-merge');\n\nvar debug = require('debug')('express:router');\n\nvar deprecate = require('depd')('express');\n\nvar flatten = require('array-flatten');\n\nvar parseUrl = require('parseurl');\n\nvar setPrototypeOf = require('setprototypeof');\n/**\n * Module variables.\n * @private\n */\n\n\nvar objectRegExp = /^\\[object (\\S+)\\]$/;\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n/**\n * Initialize a new `Router` with the given `options`.\n *\n * @param {Object} [options]\n * @return {Router} which is an callable function\n * @public\n */\n\nvar proto = module.exports = function (options) {\n  var opts = options || {};\n\n  function router(req, res, next) {\n    router.handle(req, res, next);\n  } // mixin Router class functions\n\n\n  setPrototypeOf(router, proto);\n  router.params = {};\n  router._params = [];\n  router.caseSensitive = opts.caseSensitive;\n  router.mergeParams = opts.mergeParams;\n  router.strict = opts.strict;\n  router.stack = [];\n  return router;\n};\n/**\n * Map the given param placeholder `name`(s) to the given callback.\n *\n * Parameter mapping is used to provide pre-conditions to routes\n * which use normalized placeholders. For example a _:user_id_ parameter\n * could automatically load a user's information from the database without\n * any additional code,\n *\n * The callback uses the same signature as middleware, the only difference\n * being that the value of the placeholder is passed, in this case the _id_\n * of the user. Once the `next()` function is invoked, just like middleware\n * it will continue on to execute the route, or subsequent parameter functions.\n *\n * Just like in middleware, you must either respond to the request or call next\n * to avoid stalling the request.\n *\n *  app.param('user_id', function(req, res, next, id){\n *    User.find(id, function(err, user){\n *      if (err) {\n *        return next(err);\n *      } else if (!user) {\n *        return next(new Error('failed to load user'));\n *      }\n *      req.user = user;\n *      next();\n *    });\n *  });\n *\n * @param {String} name\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\n\nproto.param = function param(name, fn) {\n  // param logic\n  if (typeof name === 'function') {\n    deprecate('router.param(fn): Refactor to use path params');\n\n    this._params.push(name);\n\n    return;\n  } // apply param functions\n\n\n  var params = this._params;\n  var len = params.length;\n  var ret;\n\n  if (name[0] === ':') {\n    deprecate('router.param(' + JSON.stringify(name) + ', fn): Use router.param(' + JSON.stringify(name.slice(1)) + ', fn) instead');\n    name = name.slice(1);\n  }\n\n  for (var i = 0; i < len; ++i) {\n    if (ret = params[i](name, fn)) {\n      fn = ret;\n    }\n  } // ensure we end up with a\n  // middleware function\n\n\n  if ('function' !== typeof fn) {\n    throw new Error('invalid param() call for ' + name + ', got ' + fn);\n  }\n\n  (this.params[name] = this.params[name] || []).push(fn);\n  return this;\n};\n/**\n * Dispatch a req, res into the router.\n * @private\n */\n\n\nproto.handle = function handle(req, res, out) {\n  var self = this;\n  debug('dispatching %s %s', req.method, req.url);\n  var idx = 0;\n  var protohost = getProtohost(req.url) || '';\n  var removed = '';\n  var slashAdded = false;\n  var sync = 0;\n  var paramcalled = {}; // store options for OPTIONS request\n  // only used if OPTIONS request\n\n  var options = []; // middleware and routes\n\n  var stack = self.stack; // manage inter-router variables\n\n  var parentParams = req.params;\n  var parentUrl = req.baseUrl || '';\n  var done = restore(out, req, 'baseUrl', 'next', 'params'); // setup next layer\n\n  req.next = next; // for options requests, respond with a default if nothing else responds\n\n  if (req.method === 'OPTIONS') {\n    done = wrap(done, function (old, err) {\n      if (err || options.length === 0) return old(err);\n      sendOptionsResponse(res, options, old);\n    });\n  } // setup basic req values\n\n\n  req.baseUrl = parentUrl;\n  req.originalUrl = req.originalUrl || req.url;\n  next();\n\n  function next(err) {\n    var layerError = err === 'route' ? null : err; // remove added slash\n\n    if (slashAdded) {\n      req.url = req.url.slice(1);\n      slashAdded = false;\n    } // restore altered req.url\n\n\n    if (removed.length !== 0) {\n      req.baseUrl = parentUrl;\n      req.url = protohost + removed + req.url.slice(protohost.length);\n      removed = '';\n    } // signal to exit router\n\n\n    if (layerError === 'router') {\n      setImmediate(done, null);\n      return;\n    } // no more matching layers\n\n\n    if (idx >= stack.length) {\n      setImmediate(done, layerError);\n      return;\n    } // max sync stack\n\n\n    if (++sync > 100) {\n      return setImmediate(next, err);\n    } // get pathname of request\n\n\n    var path = getPathname(req);\n\n    if (path == null) {\n      return done(layerError);\n    } // find next matching layer\n\n\n    var layer;\n    var match;\n    var route;\n\n    while (match !== true && idx < stack.length) {\n      layer = stack[idx++];\n      match = matchLayer(layer, path);\n      route = layer.route;\n\n      if (typeof match !== 'boolean') {\n        // hold on to layerError\n        layerError = layerError || match;\n      }\n\n      if (match !== true) {\n        continue;\n      }\n\n      if (!route) {\n        // process non-route handlers normally\n        continue;\n      }\n\n      if (layerError) {\n        // routes do not match with a pending error\n        match = false;\n        continue;\n      }\n\n      var method = req.method;\n\n      var has_method = route._handles_method(method); // build up automatic options response\n\n\n      if (!has_method && method === 'OPTIONS') {\n        appendMethods(options, route._options());\n      } // don't even bother matching route\n\n\n      if (!has_method && method !== 'HEAD') {\n        match = false;\n      }\n    } // no match\n\n\n    if (match !== true) {\n      return done(layerError);\n    } // store route for dispatch on change\n\n\n    if (route) {\n      req.route = route;\n    } // Capture one-time layer values\n\n\n    req.params = self.mergeParams ? mergeParams(layer.params, parentParams) : layer.params;\n    var layerPath = layer.path; // this should be done for the layer\n\n    self.process_params(layer, paramcalled, req, res, function (err) {\n      if (err) {\n        next(layerError || err);\n      } else if (route) {\n        layer.handle_request(req, res, next);\n      } else {\n        trim_prefix(layer, layerError, layerPath, path);\n      }\n\n      sync = 0;\n    });\n  }\n\n  function trim_prefix(layer, layerError, layerPath, path) {\n    if (layerPath.length !== 0) {\n      // Validate path is a prefix match\n      if (layerPath !== path.slice(0, layerPath.length)) {\n        next(layerError);\n        return;\n      } // Validate path breaks on a path separator\n\n\n      var c = path[layerPath.length];\n      if (c && c !== '/' && c !== '.') return next(layerError); // Trim off the part of the url that matches the route\n      // middleware (.use stuff) needs to have the path stripped\n\n      debug('trim prefix (%s) from url %s', layerPath, req.url);\n      removed = layerPath;\n      req.url = protohost + req.url.slice(protohost.length + removed.length); // Ensure leading slash\n\n      if (!protohost && req.url[0] !== '/') {\n        req.url = '/' + req.url;\n        slashAdded = true;\n      } // Setup base URL (no trailing slash)\n\n\n      req.baseUrl = parentUrl + (removed[removed.length - 1] === '/' ? removed.substring(0, removed.length - 1) : removed);\n    }\n\n    debug('%s %s : %s', layer.name, layerPath, req.originalUrl);\n\n    if (layerError) {\n      layer.handle_error(layerError, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n  }\n};\n/**\n * Process any parameters for the layer.\n * @private\n */\n\n\nproto.process_params = function process_params(layer, called, req, res, done) {\n  var params = this.params; // captured parameters from the layer, keys and values\n\n  var keys = layer.keys; // fast track\n\n  if (!keys || keys.length === 0) {\n    return done();\n  }\n\n  var i = 0;\n  var name;\n  var paramIndex = 0;\n  var key;\n  var paramVal;\n  var paramCallbacks;\n  var paramCalled; // process params in order\n  // param callbacks can be async\n\n  function param(err) {\n    if (err) {\n      return done(err);\n    }\n\n    if (i >= keys.length) {\n      return done();\n    }\n\n    paramIndex = 0;\n    key = keys[i++];\n    name = key.name;\n    paramVal = req.params[name];\n    paramCallbacks = params[name];\n    paramCalled = called[name];\n\n    if (paramVal === undefined || !paramCallbacks) {\n      return param();\n    } // param previously called with same value or error occurred\n\n\n    if (paramCalled && (paramCalled.match === paramVal || paramCalled.error && paramCalled.error !== 'route')) {\n      // restore value\n      req.params[name] = paramCalled.value; // next param\n\n      return param(paramCalled.error);\n    }\n\n    called[name] = paramCalled = {\n      error: null,\n      match: paramVal,\n      value: paramVal\n    };\n    paramCallback();\n  } // single param callbacks\n\n\n  function paramCallback(err) {\n    var fn = paramCallbacks[paramIndex++]; // store updated value\n\n    paramCalled.value = req.params[key.name];\n\n    if (err) {\n      // store error\n      paramCalled.error = err;\n      param(err);\n      return;\n    }\n\n    if (!fn) return param();\n\n    try {\n      fn(req, res, paramCallback, paramVal, key.name);\n    } catch (e) {\n      paramCallback(e);\n    }\n  }\n\n  param();\n};\n/**\n * Use the given middleware function, with optional path, defaulting to \"/\".\n *\n * Use (like `.all`) will run for any http METHOD, but it will not add\n * handlers for those methods so OPTIONS requests will not consider `.use`\n * functions even if they could respond.\n *\n * The other difference is that _route_ path is stripped and not visible\n * to the handler function. The main effect of this feature is that mounted\n * handlers can operate without any code changes regardless of the \"prefix\"\n * pathname.\n *\n * @public\n */\n\n\nproto.use = function use(fn) {\n  var offset = 0;\n  var path = '/'; // default path to '/'\n  // disambiguate router.use([fn])\n\n  if (typeof fn !== 'function') {\n    var arg = fn;\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n      arg = arg[0];\n    } // first arg is the path\n\n\n    if (typeof arg !== 'function') {\n      offset = 1;\n      path = fn;\n    }\n  }\n\n  var callbacks = flatten(slice.call(arguments, offset));\n\n  if (callbacks.length === 0) {\n    throw new TypeError('Router.use() requires a middleware function');\n  }\n\n  for (var i = 0; i < callbacks.length; i++) {\n    var fn = callbacks[i];\n\n    if (typeof fn !== 'function') {\n      throw new TypeError('Router.use() requires a middleware function but got a ' + gettype(fn));\n    } // add the middleware\n\n\n    debug('use %o %s', path, fn.name || '<anonymous>');\n    var layer = new Layer(path, {\n      sensitive: this.caseSensitive,\n      strict: false,\n      end: false\n    }, fn);\n    layer.route = undefined;\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n/**\n * Create a new Route for the given path.\n *\n * Each route contains a separate middleware stack and VERB handlers.\n *\n * See the Route api documentation for details on adding handlers\n * and middleware to routes.\n *\n * @param {String} path\n * @return {Route}\n * @public\n */\n\n\nproto.route = function route(path) {\n  var route = new Route(path);\n  var layer = new Layer(path, {\n    sensitive: this.caseSensitive,\n    strict: this.strict,\n    end: true\n  }, route.dispatch.bind(route));\n  layer.route = route;\n  this.stack.push(layer);\n  return route;\n}; // create Router#VERB functions\n\n\nmethods.concat('all').forEach(function (method) {\n  proto[method] = function (path) {\n    var route = this.route(path);\n    route[method].apply(route, slice.call(arguments, 1));\n    return this;\n  };\n}); // append methods to a list of methods\n\nfunction appendMethods(list, addition) {\n  for (var i = 0; i < addition.length; i++) {\n    var method = addition[i];\n\n    if (list.indexOf(method) === -1) {\n      list.push(method);\n    }\n  }\n} // get pathname of request\n\n\nfunction getPathname(req) {\n  try {\n    return parseUrl(req).pathname;\n  } catch (err) {\n    return undefined;\n  }\n} // Get get protocol + host for a URL\n\n\nfunction getProtohost(url) {\n  if (typeof url !== 'string' || url.length === 0 || url[0] === '/') {\n    return undefined;\n  }\n\n  var searchIndex = url.indexOf('?');\n  var pathLength = searchIndex !== -1 ? searchIndex : url.length;\n  var fqdnIndex = url.slice(0, pathLength).indexOf('://');\n  return fqdnIndex !== -1 ? url.substring(0, url.indexOf('/', 3 + fqdnIndex)) : undefined;\n} // get type for error message\n\n\nfunction gettype(obj) {\n  var type = typeof obj;\n\n  if (type !== 'object') {\n    return type;\n  } // inspect [[Class]] for objects\n\n\n  return toString.call(obj).replace(objectRegExp, '$1');\n}\n/**\n * Match path to a layer.\n *\n * @param {Layer} layer\n * @param {string} path\n * @private\n */\n\n\nfunction matchLayer(layer, path) {\n  try {\n    return layer.match(path);\n  } catch (err) {\n    return err;\n  }\n} // merge params with parent params\n\n\nfunction mergeParams(params, parent) {\n  if (typeof parent !== 'object' || !parent) {\n    return params;\n  } // make copy of parent for base\n\n\n  var obj = mixin({}, parent); // simple non-numeric merging\n\n  if (!(0 in params) || !(0 in parent)) {\n    return mixin(obj, params);\n  }\n\n  var i = 0;\n  var o = 0; // determine numeric gaps\n\n  while (i in params) {\n    i++;\n  }\n\n  while (o in parent) {\n    o++;\n  } // offset numeric indices in params before merge\n\n\n  for (i--; i >= 0; i--) {\n    params[i + o] = params[i]; // create holes for the merge when necessary\n\n    if (i < o) {\n      delete params[i];\n    }\n  }\n\n  return mixin(obj, params);\n} // restore obj props after function\n\n\nfunction restore(fn, obj) {\n  var props = new Array(arguments.length - 2);\n  var vals = new Array(arguments.length - 2);\n\n  for (var i = 0; i < props.length; i++) {\n    props[i] = arguments[i + 2];\n    vals[i] = obj[props[i]];\n  }\n\n  return function () {\n    // restore vals\n    for (var i = 0; i < props.length; i++) {\n      obj[props[i]] = vals[i];\n    }\n\n    return fn.apply(this, arguments);\n  };\n} // send an OPTIONS response\n\n\nfunction sendOptionsResponse(res, options, next) {\n  try {\n    var body = options.join(',');\n    res.set('Allow', body);\n    res.send(body);\n  } catch (err) {\n    next(err);\n  }\n} // wrap a function\n\n\nfunction wrap(old, fn) {\n  return function proxy() {\n    var args = new Array(arguments.length + 1);\n    args[0] = old;\n\n    for (var i = 0, len = arguments.length; i < len; i++) {\n      args[i + 1] = arguments[i];\n    }\n\n    fn.apply(this, args);\n  };\n}","map":{"version":3,"sources":["C:/dev/diploma/movies-explorer-frontend/node_modules/express/lib/router/index.js"],"names":["Route","require","Layer","methods","mixin","debug","deprecate","flatten","parseUrl","setPrototypeOf","objectRegExp","slice","Array","prototype","toString","Object","proto","module","exports","options","opts","router","req","res","next","handle","params","_params","caseSensitive","mergeParams","strict","stack","param","name","fn","push","len","length","ret","JSON","stringify","i","Error","out","self","method","url","idx","protohost","getProtohost","removed","slashAdded","sync","paramcalled","parentParams","parentUrl","baseUrl","done","restore","wrap","old","err","sendOptionsResponse","originalUrl","layerError","setImmediate","path","getPathname","layer","match","route","matchLayer","has_method","_handles_method","appendMethods","_options","layerPath","process_params","handle_request","trim_prefix","c","substring","handle_error","called","keys","paramIndex","key","paramVal","paramCallbacks","paramCalled","undefined","error","value","paramCallback","e","use","offset","arg","isArray","callbacks","call","arguments","TypeError","gettype","sensitive","end","dispatch","bind","concat","forEach","apply","list","addition","indexOf","pathname","searchIndex","pathLength","fqdnIndex","obj","type","replace","parent","o","props","vals","body","join","set","send","proxy","args"],"mappings":"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","sourcesContent":["/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Route = require('./route');\nvar Layer = require('./layer');\nvar methods = require('methods');\nvar mixin = require('utils-merge');\nvar debug = require('debug')('express:router');\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar parseUrl = require('parseurl');\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Module variables.\n * @private\n */\n\nvar objectRegExp = /^\\[object (\\S+)\\]$/;\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n/**\n * Initialize a new `Router` with the given `options`.\n *\n * @param {Object} [options]\n * @return {Router} which is an callable function\n * @public\n */\n\nvar proto = module.exports = function(options) {\n  var opts = options || {};\n\n  function router(req, res, next) {\n    router.handle(req, res, next);\n  }\n\n  // mixin Router class functions\n  setPrototypeOf(router, proto)\n\n  router.params = {};\n  router._params = [];\n  router.caseSensitive = opts.caseSensitive;\n  router.mergeParams = opts.mergeParams;\n  router.strict = opts.strict;\n  router.stack = [];\n\n  return router;\n};\n\n/**\n * Map the given param placeholder `name`(s) to the given callback.\n *\n * Parameter mapping is used to provide pre-conditions to routes\n * which use normalized placeholders. For example a _:user_id_ parameter\n * could automatically load a user's information from the database without\n * any additional code,\n *\n * The callback uses the same signature as middleware, the only difference\n * being that the value of the placeholder is passed, in this case the _id_\n * of the user. Once the `next()` function is invoked, just like middleware\n * it will continue on to execute the route, or subsequent parameter functions.\n *\n * Just like in middleware, you must either respond to the request or call next\n * to avoid stalling the request.\n *\n *  app.param('user_id', function(req, res, next, id){\n *    User.find(id, function(err, user){\n *      if (err) {\n *        return next(err);\n *      } else if (!user) {\n *        return next(new Error('failed to load user'));\n *      }\n *      req.user = user;\n *      next();\n *    });\n *  });\n *\n * @param {String} name\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\nproto.param = function param(name, fn) {\n  // param logic\n  if (typeof name === 'function') {\n    deprecate('router.param(fn): Refactor to use path params');\n    this._params.push(name);\n    return;\n  }\n\n  // apply param functions\n  var params = this._params;\n  var len = params.length;\n  var ret;\n\n  if (name[0] === ':') {\n    deprecate('router.param(' + JSON.stringify(name) + ', fn): Use router.param(' + JSON.stringify(name.slice(1)) + ', fn) instead')\n    name = name.slice(1)\n  }\n\n  for (var i = 0; i < len; ++i) {\n    if (ret = params[i](name, fn)) {\n      fn = ret;\n    }\n  }\n\n  // ensure we end up with a\n  // middleware function\n  if ('function' !== typeof fn) {\n    throw new Error('invalid param() call for ' + name + ', got ' + fn);\n  }\n\n  (this.params[name] = this.params[name] || []).push(fn);\n  return this;\n};\n\n/**\n * Dispatch a req, res into the router.\n * @private\n */\n\nproto.handle = function handle(req, res, out) {\n  var self = this;\n\n  debug('dispatching %s %s', req.method, req.url);\n\n  var idx = 0;\n  var protohost = getProtohost(req.url) || ''\n  var removed = '';\n  var slashAdded = false;\n  var sync = 0\n  var paramcalled = {};\n\n  // store options for OPTIONS request\n  // only used if OPTIONS request\n  var options = [];\n\n  // middleware and routes\n  var stack = self.stack;\n\n  // manage inter-router variables\n  var parentParams = req.params;\n  var parentUrl = req.baseUrl || '';\n  var done = restore(out, req, 'baseUrl', 'next', 'params');\n\n  // setup next layer\n  req.next = next;\n\n  // for options requests, respond with a default if nothing else responds\n  if (req.method === 'OPTIONS') {\n    done = wrap(done, function(old, err) {\n      if (err || options.length === 0) return old(err);\n      sendOptionsResponse(res, options, old);\n    });\n  }\n\n  // setup basic req values\n  req.baseUrl = parentUrl;\n  req.originalUrl = req.originalUrl || req.url;\n\n  next();\n\n  function next(err) {\n    var layerError = err === 'route'\n      ? null\n      : err;\n\n    // remove added slash\n    if (slashAdded) {\n      req.url = req.url.slice(1)\n      slashAdded = false;\n    }\n\n    // restore altered req.url\n    if (removed.length !== 0) {\n      req.baseUrl = parentUrl;\n      req.url = protohost + removed + req.url.slice(protohost.length)\n      removed = '';\n    }\n\n    // signal to exit router\n    if (layerError === 'router') {\n      setImmediate(done, null)\n      return\n    }\n\n    // no more matching layers\n    if (idx >= stack.length) {\n      setImmediate(done, layerError);\n      return;\n    }\n\n    // max sync stack\n    if (++sync > 100) {\n      return setImmediate(next, err)\n    }\n\n    // get pathname of request\n    var path = getPathname(req);\n\n    if (path == null) {\n      return done(layerError);\n    }\n\n    // find next matching layer\n    var layer;\n    var match;\n    var route;\n\n    while (match !== true && idx < stack.length) {\n      layer = stack[idx++];\n      match = matchLayer(layer, path);\n      route = layer.route;\n\n      if (typeof match !== 'boolean') {\n        // hold on to layerError\n        layerError = layerError || match;\n      }\n\n      if (match !== true) {\n        continue;\n      }\n\n      if (!route) {\n        // process non-route handlers normally\n        continue;\n      }\n\n      if (layerError) {\n        // routes do not match with a pending error\n        match = false;\n        continue;\n      }\n\n      var method = req.method;\n      var has_method = route._handles_method(method);\n\n      // build up automatic options response\n      if (!has_method && method === 'OPTIONS') {\n        appendMethods(options, route._options());\n      }\n\n      // don't even bother matching route\n      if (!has_method && method !== 'HEAD') {\n        match = false;\n      }\n    }\n\n    // no match\n    if (match !== true) {\n      return done(layerError);\n    }\n\n    // store route for dispatch on change\n    if (route) {\n      req.route = route;\n    }\n\n    // Capture one-time layer values\n    req.params = self.mergeParams\n      ? mergeParams(layer.params, parentParams)\n      : layer.params;\n    var layerPath = layer.path;\n\n    // this should be done for the layer\n    self.process_params(layer, paramcalled, req, res, function (err) {\n      if (err) {\n        next(layerError || err)\n      } else if (route) {\n        layer.handle_request(req, res, next)\n      } else {\n        trim_prefix(layer, layerError, layerPath, path)\n      }\n\n      sync = 0\n    });\n  }\n\n  function trim_prefix(layer, layerError, layerPath, path) {\n    if (layerPath.length !== 0) {\n      // Validate path is a prefix match\n      if (layerPath !== path.slice(0, layerPath.length)) {\n        next(layerError)\n        return\n      }\n\n      // Validate path breaks on a path separator\n      var c = path[layerPath.length]\n      if (c && c !== '/' && c !== '.') return next(layerError)\n\n      // Trim off the part of the url that matches the route\n      // middleware (.use stuff) needs to have the path stripped\n      debug('trim prefix (%s) from url %s', layerPath, req.url);\n      removed = layerPath;\n      req.url = protohost + req.url.slice(protohost.length + removed.length)\n\n      // Ensure leading slash\n      if (!protohost && req.url[0] !== '/') {\n        req.url = '/' + req.url;\n        slashAdded = true;\n      }\n\n      // Setup base URL (no trailing slash)\n      req.baseUrl = parentUrl + (removed[removed.length - 1] === '/'\n        ? removed.substring(0, removed.length - 1)\n        : removed);\n    }\n\n    debug('%s %s : %s', layer.name, layerPath, req.originalUrl);\n\n    if (layerError) {\n      layer.handle_error(layerError, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n  }\n};\n\n/**\n * Process any parameters for the layer.\n * @private\n */\n\nproto.process_params = function process_params(layer, called, req, res, done) {\n  var params = this.params;\n\n  // captured parameters from the layer, keys and values\n  var keys = layer.keys;\n\n  // fast track\n  if (!keys || keys.length === 0) {\n    return done();\n  }\n\n  var i = 0;\n  var name;\n  var paramIndex = 0;\n  var key;\n  var paramVal;\n  var paramCallbacks;\n  var paramCalled;\n\n  // process params in order\n  // param callbacks can be async\n  function param(err) {\n    if (err) {\n      return done(err);\n    }\n\n    if (i >= keys.length ) {\n      return done();\n    }\n\n    paramIndex = 0;\n    key = keys[i++];\n    name = key.name;\n    paramVal = req.params[name];\n    paramCallbacks = params[name];\n    paramCalled = called[name];\n\n    if (paramVal === undefined || !paramCallbacks) {\n      return param();\n    }\n\n    // param previously called with same value or error occurred\n    if (paramCalled && (paramCalled.match === paramVal\n      || (paramCalled.error && paramCalled.error !== 'route'))) {\n      // restore value\n      req.params[name] = paramCalled.value;\n\n      // next param\n      return param(paramCalled.error);\n    }\n\n    called[name] = paramCalled = {\n      error: null,\n      match: paramVal,\n      value: paramVal\n    };\n\n    paramCallback();\n  }\n\n  // single param callbacks\n  function paramCallback(err) {\n    var fn = paramCallbacks[paramIndex++];\n\n    // store updated value\n    paramCalled.value = req.params[key.name];\n\n    if (err) {\n      // store error\n      paramCalled.error = err;\n      param(err);\n      return;\n    }\n\n    if (!fn) return param();\n\n    try {\n      fn(req, res, paramCallback, paramVal, key.name);\n    } catch (e) {\n      paramCallback(e);\n    }\n  }\n\n  param();\n};\n\n/**\n * Use the given middleware function, with optional path, defaulting to \"/\".\n *\n * Use (like `.all`) will run for any http METHOD, but it will not add\n * handlers for those methods so OPTIONS requests will not consider `.use`\n * functions even if they could respond.\n *\n * The other difference is that _route_ path is stripped and not visible\n * to the handler function. The main effect of this feature is that mounted\n * handlers can operate without any code changes regardless of the \"prefix\"\n * pathname.\n *\n * @public\n */\n\nproto.use = function use(fn) {\n  var offset = 0;\n  var path = '/';\n\n  // default path to '/'\n  // disambiguate router.use([fn])\n  if (typeof fn !== 'function') {\n    var arg = fn;\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n      arg = arg[0];\n    }\n\n    // first arg is the path\n    if (typeof arg !== 'function') {\n      offset = 1;\n      path = fn;\n    }\n  }\n\n  var callbacks = flatten(slice.call(arguments, offset));\n\n  if (callbacks.length === 0) {\n    throw new TypeError('Router.use() requires a middleware function')\n  }\n\n  for (var i = 0; i < callbacks.length; i++) {\n    var fn = callbacks[i];\n\n    if (typeof fn !== 'function') {\n      throw new TypeError('Router.use() requires a middleware function but got a ' + gettype(fn))\n    }\n\n    // add the middleware\n    debug('use %o %s', path, fn.name || '<anonymous>')\n\n    var layer = new Layer(path, {\n      sensitive: this.caseSensitive,\n      strict: false,\n      end: false\n    }, fn);\n\n    layer.route = undefined;\n\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\n/**\n * Create a new Route for the given path.\n *\n * Each route contains a separate middleware stack and VERB handlers.\n *\n * See the Route api documentation for details on adding handlers\n * and middleware to routes.\n *\n * @param {String} path\n * @return {Route}\n * @public\n */\n\nproto.route = function route(path) {\n  var route = new Route(path);\n\n  var layer = new Layer(path, {\n    sensitive: this.caseSensitive,\n    strict: this.strict,\n    end: true\n  }, route.dispatch.bind(route));\n\n  layer.route = route;\n\n  this.stack.push(layer);\n  return route;\n};\n\n// create Router#VERB functions\nmethods.concat('all').forEach(function(method){\n  proto[method] = function(path){\n    var route = this.route(path)\n    route[method].apply(route, slice.call(arguments, 1));\n    return this;\n  };\n});\n\n// append methods to a list of methods\nfunction appendMethods(list, addition) {\n  for (var i = 0; i < addition.length; i++) {\n    var method = addition[i];\n    if (list.indexOf(method) === -1) {\n      list.push(method);\n    }\n  }\n}\n\n// get pathname of request\nfunction getPathname(req) {\n  try {\n    return parseUrl(req).pathname;\n  } catch (err) {\n    return undefined;\n  }\n}\n\n// Get get protocol + host for a URL\nfunction getProtohost(url) {\n  if (typeof url !== 'string' || url.length === 0 || url[0] === '/') {\n    return undefined\n  }\n\n  var searchIndex = url.indexOf('?')\n  var pathLength = searchIndex !== -1\n    ? searchIndex\n    : url.length\n  var fqdnIndex = url.slice(0, pathLength).indexOf('://')\n\n  return fqdnIndex !== -1\n    ? url.substring(0, url.indexOf('/', 3 + fqdnIndex))\n    : undefined\n}\n\n// get type for error message\nfunction gettype(obj) {\n  var type = typeof obj;\n\n  if (type !== 'object') {\n    return type;\n  }\n\n  // inspect [[Class]] for objects\n  return toString.call(obj)\n    .replace(objectRegExp, '$1');\n}\n\n/**\n * Match path to a layer.\n *\n * @param {Layer} layer\n * @param {string} path\n * @private\n */\n\nfunction matchLayer(layer, path) {\n  try {\n    return layer.match(path);\n  } catch (err) {\n    return err;\n  }\n}\n\n// merge params with parent params\nfunction mergeParams(params, parent) {\n  if (typeof parent !== 'object' || !parent) {\n    return params;\n  }\n\n  // make copy of parent for base\n  var obj = mixin({}, parent);\n\n  // simple non-numeric merging\n  if (!(0 in params) || !(0 in parent)) {\n    return mixin(obj, params);\n  }\n\n  var i = 0;\n  var o = 0;\n\n  // determine numeric gaps\n  while (i in params) {\n    i++;\n  }\n\n  while (o in parent) {\n    o++;\n  }\n\n  // offset numeric indices in params before merge\n  for (i--; i >= 0; i--) {\n    params[i + o] = params[i];\n\n    // create holes for the merge when necessary\n    if (i < o) {\n      delete params[i];\n    }\n  }\n\n  return mixin(obj, params);\n}\n\n// restore obj props after function\nfunction restore(fn, obj) {\n  var props = new Array(arguments.length - 2);\n  var vals = new Array(arguments.length - 2);\n\n  for (var i = 0; i < props.length; i++) {\n    props[i] = arguments[i + 2];\n    vals[i] = obj[props[i]];\n  }\n\n  return function () {\n    // restore vals\n    for (var i = 0; i < props.length; i++) {\n      obj[props[i]] = vals[i];\n    }\n\n    return fn.apply(this, arguments);\n  };\n}\n\n// send an OPTIONS response\nfunction sendOptionsResponse(res, options, next) {\n  try {\n    var body = options.join(',');\n    res.set('Allow', body);\n    res.send(body);\n  } catch (err) {\n    next(err);\n  }\n}\n\n// wrap a function\nfunction wrap(old, fn) {\n  return function proxy() {\n    var args = new Array(arguments.length + 1);\n\n    args[0] = old;\n    for (var i = 0, len = arguments.length; i < len; i++) {\n      args[i + 1] = arguments[i];\n    }\n\n    fn.apply(this, args);\n  };\n}\n"]},"metadata":{},"sourceType":"script"}