{"ast":null,"code":"import _slicedToArray from\"C:/dev/diploma/movies-explorer-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{useState}from'react';import{Link}from'react-router-dom';import FormList from'../FormList/FormList';import FormComponent from'../FormComponent/FormComponent';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Register(_ref){var registration=_ref.registration;// Стейт, в котором содержится значение инпута - name, mail, password\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];// Обработчики изменения инпута обновляют стейт\nfunction handleChangeName(e){setName(e.target.value);}function handleChangeEmail(e){setEmail(e.target.value);}function handleChangePassword(e){setPassword(e.target.value);}//Отправляем данные на сервер\nfunction handleSubmit(e){// Запрещаем браузеру переходить по адресу формы\ne.preventDefault();// Передаём значения управляемых компонентов во внешний обработчик\nvar datastartPage={};datastartPage.name=name;datastartPage.email=email;datastartPage.password=password;registration(datastartPage);}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(FormList,{title:'Добро пожаловать!',name:'Регистрация',onSubmit:handleSubmit,buttonText:'Зарегистрироваться',children:[/*#__PURE__*/_jsx(FormComponent,{name:'Имя',value:name,onChange:handleChangeName,minLength:'1',maxLength:'30',required:true,type:'text',nameInput:'name'}),/*#__PURE__*/_jsx(FormComponent,{name:'E-mail',value:email,onChange:handleChangeEmail,minLength:'1',maxLength:'30',required:true,type:'text',nameInput:'Email'}),/*#__PURE__*/_jsx(FormComponent,{name:'Пароль',value:password,onChange:handleChangePassword,minLength:'4',required:true,type:'password',nameInput:'password'})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"FormList__button_span\",children:[\"\\u0423\\u0436\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u044B?\",/*#__PURE__*/_jsx(Link,{className:\"FormList__button_link\",to:\"/sign-in\",children:\" \\u0412\\u043E\\u0439\\u0442\\u0438\"})]})]});}export default Register;","map":{"version":3,"sources":["C:/dev/diploma/movies-explorer-frontend/src/components/Register/Register.js"],"names":["React","useState","Link","FormList","FormComponent","Register","registration","name","setName","email","setEmail","password","setPassword","handleChangeName","e","target","value","handleChangeEmail","handleChangePassword","handleSubmit","preventDefault","datastartPage"],"mappings":"6HAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,QAAR,KAAuB,OAAvB,CACA,OAAQC,IAAR,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CACA,MAAOC,CAAAA,aAAP,KAA0B,gCAA1B,C,wFAEA,QAASC,CAAAA,QAAT,MAAmC,IAAfC,CAAAA,YAAe,MAAfA,YAAe,CAE/B;AACA,cAAwBL,QAAQ,CAAC,EAAD,CAAhC,wCAAOM,IAAP,eAAaC,OAAb,eACA,eAA0BP,QAAQ,CAAC,EAAD,CAAlC,yCAAOQ,KAAP,eAAcC,QAAd,eACA,eAAgCT,QAAQ,CAAC,EAAD,CAAxC,yCAAOU,QAAP,eAAiBC,WAAjB,eAEA;AAEA,QAASC,CAAAA,gBAAT,CAA0BC,CAA1B,CAA6B,CACzBN,OAAO,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP,CACH,CAED,QAASC,CAAAA,iBAAT,CAA2BH,CAA3B,CAA8B,CAC1BJ,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR,CACH,CAED,QAASE,CAAAA,oBAAT,CAA8BJ,CAA9B,CAAiC,CAC7BF,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX,CACH,CAEL;AACI,QAASG,CAAAA,YAAT,CAAsBL,CAAtB,CAAyB,CACzB;AACAA,CAAC,CAACM,cAAF,GAEA;AACA,GAAMC,CAAAA,aAAa,CAAG,EAAtB,CACAA,aAAa,CAACd,IAAd,CAAqBA,IAArB,CACAc,aAAa,CAACZ,KAAd,CAAsBA,KAAtB,CACAY,aAAa,CAACV,QAAd,CAAyBA,QAAzB,CACAL,YAAY,CAACe,aAAD,CAAZ,CACC,CAED,mBACI,oCACI,MAAC,QAAD,EACI,KAAK,CAAI,mBADb,CACkC,IAAI,CAAE,aADxC,CAEI,QAAQ,CAAEF,YAFd,CAE4B,UAAU,CAAI,oBAF1C,wBAII,KAAC,aAAD,EAAe,IAAI,CAAI,KAAvB,CAA8B,KAAK,CAAIZ,IAAvC,CAA6C,QAAQ,CAAIM,gBAAzD,CACI,SAAS,CAAI,GADjB,CACsB,SAAS,CAAI,IADnC,CACyC,QAAQ,KADjD,CACkD,IAAI,CAAI,MAD1D,CACkE,SAAS,CAAG,MAD9E,EAJJ,cAOI,KAAC,aAAD,EAAe,IAAI,CAAI,QAAvB,CAAiC,KAAK,CAAIJ,KAA1C,CAAiD,QAAQ,CAAIQ,iBAA7D,CACI,SAAS,CAAI,GADjB,CACsB,SAAS,CAAI,IADnC,CACyC,QAAQ,KADjD,CACkD,IAAI,CAAI,MAD1D,CACkE,SAAS,CAAG,OAD9E,EAPJ,cAUI,KAAC,aAAD,EAAe,IAAI,CAAI,QAAvB,CAAiC,KAAK,CAAIN,QAA1C,CAAoD,QAAQ,CAAIO,oBAAhE,CACI,SAAS,CAAI,GADjB,CACuB,QAAQ,KAD/B,CACgC,IAAI,CAAI,UADxC,CACoD,SAAS,CAAG,UADhE,EAVJ,GADJ,cAeI,WAAG,SAAS,CAAC,uBAAb,+IACI,KAAC,IAAD,EAAM,SAAS,CAAC,uBAAhB,CAAwC,EAAE,CAAC,UAA3C,6CADJ,GAfJ,GADJ,CAqBH,CAED,cAAeb,CAAAA,QAAf","sourcesContent":["import React from 'react';\r\nimport {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport FormList from '../FormList/FormList';\r\nimport FormComponent from '../FormComponent/FormComponent';\r\n\r\nfunction Register ({registration}) {\r\n    \r\n    // Стейт, в котором содержится значение инпута - name, mail, password\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    // Обработчики изменения инпута обновляют стейт\r\n\r\n    function handleChangeName(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleChangeEmail(e) {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    function handleChangePassword(e) {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n//Отправляем данные на сервер\r\n    function handleSubmit(e) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    e.preventDefault();\r\n    \r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    const datastartPage = {};\r\n    datastartPage.name = name;\r\n    datastartPage.email = email;\r\n    datastartPage.password = password;\r\n    registration(datastartPage);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <FormList\r\n                title = {'Добро пожаловать!'} name={'Регистрация'} \r\n                onSubmit={handleSubmit} buttonText = {'Зарегистрироваться'}\r\n            >\r\n                <FormComponent name = {'Имя'} value = {name} onChange = {handleChangeName}\r\n                    minLength = {'1'} maxLength = {'30'} required type = {'text'} nameInput ={'name'}\r\n                />\r\n                <FormComponent name = {'E-mail'} value = {email} onChange = {handleChangeEmail}\r\n                    minLength = {'1'} maxLength = {'30'} required type = {'text'} nameInput ={'Email'}\r\n                />\r\n                <FormComponent name = {'Пароль'} value = {password} onChange = {handleChangePassword}\r\n                    minLength = {'4'}  required type = {'password'} nameInput ={'password'}\r\n                />\r\n            </FormList>\r\n            <p className=\"FormList__button_span\">Уже зарегистрированы?\r\n                <Link className=\"FormList__button_link\" to='/sign-in'> Войти</Link>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}