{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\diploma\\\\movies-explorer-frontend\\\\src\\\\components\\\\Movies\\\\Movies.js\",\n    _s = $RefreshSig$();\n\nimport MoviesCard from '../MoviesCard/MoviesCard';\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\nimport { useState, useEffect } from 'react';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Movies(_ref) {\n  _s();\n\n  let {\n    onCardClick,\n    onCardLike,\n    onCardDelete,\n    isSavedCard\n  } = _ref;\n  const currentUser = useContext(CurrentUserContext);\n  const apiURL = 'https://api.nomoreparties.co/beatfilm-movies';\n  let moviesCount = 5;\n  let moviesAddCount = 2;\n\n  window.onresize = () => {\n    setTimeout(() => {\n      if (window.innerWidth >= 1280) {\n        moviesCount = 12;\n        moviesAddCount = 3;\n      } else if (window.innerWidth >= 768) {\n        moviesCount = 8;\n        moviesAddCount = 2;\n      } else {\n        moviesCount = 5;\n        moviesAddCount = 2;\n      }\n    }, 1000);\n  };\n\n  const [cards, setCards] = useState([]);\n  const [filteredCards, setFilteredCards] = useState([]);\n  const [shortCards, setShortCards] = useState(false);\n  const [query, setQuery] = useState('');\n  const [countFilms, setCountFilms] = useState(moviesCount);\n  const [addCountFilms, setAddCountFilms] = useState(moviesAddCount);\n\n  const updateMovies = cards => {\n    setCards(cards);\n    localStorage.setItem('all_filtered_movies', JSON.stringify(cards));\n  };\n\n  const updateFilteredMovies = cards => {\n    setFilteredCards(cards);\n    localStorage.setItem('all_movies', JSON.stringify(cards));\n  };\n\n  const updateShortCards = shortCards => {\n    setCountFilms(moviesCount);\n    setShortCards(shortCards);\n    ;\n    localStorage.setItem('all_shortCards', JSON.stringify(shortCards));\n  };\n\n  const updateQuery = query => {\n    query = query.toLowerCase();\n    setQuery(query);\n    localStorage.setItem('all_query', query);\n  };\n\n  console.log(cards);\n  useEffect(() => {\n    const cards = JSON.parse(localStorage.getItem('all_movies') || '[]');\n    updateMovies(cards);\n    updateFilteredMovies(JSON.parse(localStorage.getItem('all_filtered_movies') || '[]'));\n    updateQuery(localStorage.getItem('all_query') || '');\n    updateShortCards(JSON.parse(localStorage.getItem('all_short_movies') || 'false'));\n\n    if (!cards.length) {\n      fetch(apiURL, {\n        method: 'GET',\n        headers: {\n          //'Accept': 'application/json',\n          'Content-Type': 'aplication/json'\n        }\n      }).then(res => res.json()).then(res => {\n        updateMovies(res);\n        updateFilteredMovies([]);\n      });\n    } else {\n      //console.log({cards});\n      setCards(cards);\n    }\n\n    const filteredCards = JSON.parse(localStorage.getItem('filtered_all_movies') || '[]');\n\n    if (cards.length) {\n      setFilteredCards(filteredCards);\n    }\n\n    const shortCards = JSON.parse(localStorage.getItem('all_short_movies') || 'false');\n    setShortCards(shortCards);\n    setQuery(localStorage.getItem('all_query') || '');\n  }, []);\n\n  const handleSubmit = e => {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    if (query.length) {\n      const filteredCards = cards.filter(card => card.nameRU.toLowerCase().indexOf(query) >= 0);\n      updateFilteredMovies(filteredCards);\n    } else {\n      updateFilteredMovies(cards);\n    }\n  };\n\n  const addMovies = () => {\n    setCountFilms(countFilms + addCountFilms);\n  };\n\n  const searchResult = filteredCards.filter(card => !shortCards || card.duration <= 40);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: query,\n          onChange: event => updateQuery(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: shortCards,\n          onChange: () => updateShortCards(!shortCards)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"Movies__elements\",\n        children: searchResult.slice(0, countFilms).map(card => {\n          return /*#__PURE__*/_jsxDEV(MoviesCard, {\n            onCardClick: onCardClick,\n            onCardLike: onCardLike,\n            isSavedCard: isSavedCard,\n            onCardDelete: onCardDelete,\n            card: card\n          }, card.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), countFilms < searchResult.length && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addMovies,\n        children: \"\\u0415\\u0449\\u0451\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Movies, \"eARb2tI2sl58m9ikImU1giSFRSY=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["C:/dev/diploma/movies-explorer-frontend/src/components/Movies/Movies.js"],"names":["MoviesCard","CurrentUserContext","useState","useEffect","useContext","Movies","onCardClick","onCardLike","onCardDelete","isSavedCard","currentUser","apiURL","moviesCount","moviesAddCount","window","onresize","setTimeout","innerWidth","cards","setCards","filteredCards","setFilteredCards","shortCards","setShortCards","query","setQuery","countFilms","setCountFilms","addCountFilms","setAddCountFilms","updateMovies","localStorage","setItem","JSON","stringify","updateFilteredMovies","updateShortCards","updateQuery","toLowerCase","console","log","parse","getItem","length","fetch","method","headers","then","res","json","handleSubmit","e","preventDefault","filter","card","nameRU","indexOf","addMovies","searchResult","duration","event","target","value","slice","map","id"],"mappings":"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","sourcesContent":["import MoviesCard from '../MoviesCard/MoviesCard';\r\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\r\nimport {useState, useEffect} from 'react';\r\nimport {useContext} from 'react';\r\n\r\nfunction Movies(\r\n{onCardClick, onCardLike, onCardDelete, isSavedCard}) {\r\n\r\n    const currentUser = useContext(CurrentUserContext);\r\n\r\n\r\n    const apiURL = 'https://api.nomoreparties.co/beatfilm-movies'\r\n\r\n    let moviesCount = 5;\r\n    let moviesAddCount = 2;\r\n    window.onresize = () => {\r\n        setTimeout (() => {\r\n            if (window.innerWidth >= 1280) {\r\n                moviesCount = 12;\r\n                moviesAddCount =3;\r\n            } else if (window.innerWidth >= 768) {\r\n                moviesCount = 8;\r\n                moviesAddCount = 2;\r\n            } else {\r\n                moviesCount = 5;\r\n                moviesAddCount = 2;\r\n            }\r\n        }, 1000)\r\n    };\r\n\r\n    const [cards, setCards] = useState([]);\r\n    const [filteredCards, setFilteredCards] = useState([]);\r\n    const [shortCards, setShortCards] = useState(false);\r\n    const [query, setQuery] = useState('');\r\n    const [countFilms, setCountFilms] = useState(moviesCount);\r\n    const [addCountFilms, setAddCountFilms] = useState(moviesAddCount);\r\n\r\n    const updateMovies = (cards) => {\r\n        setCards(cards);\r\n        localStorage.setItem('all_filtered_movies', JSON.stringify(cards));\r\n    }\r\n\r\n    const updateFilteredMovies = (cards) => {\r\n        setFilteredCards(cards);\r\n        localStorage.setItem('all_movies', JSON.stringify(cards));\r\n    }\r\n\r\n    const updateShortCards = (shortCards) => {\r\n        setCountFilms (moviesCount);\r\n        setShortCards(shortCards);;\r\n        localStorage.setItem('all_shortCards', JSON.stringify(shortCards));\r\n    }\r\n\r\n    const updateQuery = (query) => {\r\n        query = query.toLowerCase();\r\n        setQuery(query);\r\n        localStorage.setItem('all_query', query);\r\n    }\r\n\r\n    console.log (cards);\r\n\r\n    useEffect (() => {\r\n        const cards = JSON.parse(localStorage.getItem('all_movies') || '[]');\r\n        updateMovies(cards);\r\n        updateFilteredMovies(\r\n            JSON.parse(localStorage.getItem('all_filtered_movies') || '[]')\r\n        );\r\n        updateQuery(localStorage.getItem('all_query') || '');\r\n        updateShortCards(\r\n            JSON.parse(localStorage.getItem('all_short_movies') || 'false')\r\n        );\r\n\r\n        if (!cards.length) {\r\n        fetch (apiURL, {\r\n            method: 'GET',\r\n            headers: {\r\n                //'Accept': 'application/json',\r\n                'Content-Type': 'aplication/json'\r\n            },\r\n        })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n            updateMovies(res);\r\n            updateFilteredMovies([]);\r\n        });\r\n        } else {\r\n            //console.log({cards});\r\n            setCards(cards);\r\n        }\r\n        const filteredCards = JSON.parse(localStorage.getItem('filtered_all_movies') || '[]');\r\n        if (cards.length) {\r\n            setFilteredCards(filteredCards)\r\n        }\r\n        \r\n        const shortCards = JSON.parse(localStorage.getItem('all_short_movies') || 'false');\r\n        setShortCards (shortCards);\r\n\r\n        setQuery(localStorage.getItem('all_query') || '');\r\n\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        // Запрещаем браузеру переходить по адресу формы\r\n        e.preventDefault();\r\n\r\n        if (query.length){\r\n            const filteredCards = cards.filter (\r\n                card => card.nameRU.toLowerCase().indexOf(query) >= 0\r\n            );\r\n            updateFilteredMovies(filteredCards);\r\n        } else {\r\n            updateFilteredMovies(cards)\r\n        }\r\n    }\r\n\r\n    const addMovies = () => {\r\n        setCountFilms (countFilms + addCountFilms)\r\n    }\r\n\r\n    const searchResult = filteredCards.filter(\r\n        (card) => !shortCards || card.duration <= 40\r\n    )\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"page__container\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\"  value ={query} onChange = {(event)=> updateQuery(event.target.value)} />\r\n                    <input type=\"checkbox\" checked={shortCards} onChange={ ()=> updateShortCards (!shortCards)}/>\r\n                    <button type=\"submit\">Поиск</button>\r\n                </form>\r\n                <section className=\"Movies__elements\">\r\n                    {searchResult.slice (0, countFilms)\r\n                    .map ((card) => {\r\n                        return <MoviesCard \r\n                            onCardClick = {onCardClick} onCardLike = {onCardLike}\r\n                            isSavedCard= {isSavedCard}\r\n                            onCardDelete ={onCardDelete} card={card} key = {card.id}/>\r\n                    })}\r\n                </section>\r\n                {countFilms < searchResult.length && (\r\n                        <button type=\"button\"  onClick={addMovies}>Ещё</button>\r\n                    )\r\n                }\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Movies;"]},"metadata":{},"sourceType":"module"}