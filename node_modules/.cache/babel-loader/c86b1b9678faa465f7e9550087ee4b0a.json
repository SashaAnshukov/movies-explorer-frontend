{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\diploma\\\\movies-explorer-frontend\\\\src\\\\components\\\\Movies\\\\Movies.js\",\n    _s = $RefreshSig$();\n\nimport MoviesCard from '../MoviesCard/MoviesCard';\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\nimport { useState, useEffect } from 'react';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Movies(_ref) {\n  _s();\n\n  let {\n    onCardClick,\n    onCardLike,\n    onCardDelete\n  } = _ref;\n  const currentUser = useContext(CurrentUserContext);\n  const apiURL = 'https://api.nomoreparties.co/beatfilm-movies';\n  const [cards, setCards] = useState([]);\n  const [filteredCards, setFilteredCards] = useState([]);\n\n  const updateMovies = cards => {\n    setCards(cards);\n    localStorage.setItem('filtered_all_movies', JSON.stringify(cards));\n  };\n\n  const updateFilteredMovies = cards => {\n    setFilteredCards(cards);\n    localStorage.setItem('all_movies', JSON.stringify(cards));\n  };\n\n  console.log([cards]);\n  useEffect(() => {\n    localStorage.clear();\n    const cards = JSON.parse(localStorage.getItem('all_movies') || '[]');\n\n    if (!cards.length) {\n      fetch(apiURL, {\n        headers: {\n          //'Accept': 'application/json',\n          'Content-Type': 'aplication/json'\n        }\n      }).then(res => res.json()).then(res => {\n        updateMovies(res);\n      });\n    } else {\n      //console.log({cards});\n      setCards(cards);\n    }\n\n    const filteredCards = JSON.parse(localStorage.getItem('filtered_all_movies') || '[]');\n\n    if (cards.length) {\n      setFilteredCards(filteredCards);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"elements\",\n        children: filteredCards.map(card => {\n          return /*#__PURE__*/_jsxDEV(MoviesCard, {\n            onCardClick: onCardClick,\n            onCardLike: onCardLike,\n            onCardDelete: onCardDelete,\n            card: card\n          }, card.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Movies, \"LD5VWoiEepVzlQ+iSPUChkhD9fg=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["C:/dev/diploma/movies-explorer-frontend/src/components/Movies/Movies.js"],"names":["MoviesCard","CurrentUserContext","useState","useEffect","useContext","Movies","onCardClick","onCardLike","onCardDelete","currentUser","apiURL","cards","setCards","filteredCards","setFilteredCards","updateMovies","localStorage","setItem","JSON","stringify","updateFilteredMovies","console","log","clear","parse","getItem","length","fetch","headers","then","res","json","map","card","id"],"mappings":"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","sourcesContent":["import MoviesCard from '../MoviesCard/MoviesCard';\r\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\r\nimport {useState, useEffect} from 'react';\r\nimport {useContext} from 'react';\r\n\r\nfunction Movies(\r\n{onCardClick, onCardLike, onCardDelete}) {\r\n\r\n    const currentUser = useContext(CurrentUserContext);\r\n\r\n\r\n    const apiURL = 'https://api.nomoreparties.co/beatfilm-movies'\r\n    const [cards, setCards] = useState([]);\r\n    const [filteredCards, setFilteredCards] = useState([]);\r\n\r\n    const updateMovies = (cards) => {\r\n        setCards(cards)\r\n        localStorage.setItem('filtered_all_movies', JSON.stringify(cards));\r\n    }\r\n\r\n    const updateFilteredMovies = (cards) => {\r\n        setFilteredCards(cards)\r\n        localStorage.setItem('all_movies', JSON.stringify(cards));\r\n    }\r\n\r\n    console.log ([cards]);\r\n\r\n    useEffect (() => {\r\n        localStorage.clear();\r\n        const cards = JSON.parse(localStorage.getItem('all_movies') || '[]');\r\n        if (!cards.length) {\r\n        fetch (apiURL, {\r\n            headers: {\r\n                //'Accept': 'application/json',\r\n                'Content-Type': 'aplication/json'\r\n            },\r\n        })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n            updateMovies(res)\r\n        });\r\n        } else {\r\n            //console.log({cards});\r\n            setCards(cards);\r\n        }\r\n        const filteredCards = JSON.parse(localStorage.getItem('filtered_all_movies') || '[]');\r\n        if (cards.length) {\r\n            setFilteredCards(filteredCards)\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"page__container\">\r\n                <form>\r\n                    <input type=\"text\" />\r\n                    <input type=\"checkbox\" />\r\n                    <button type=\"submit\">Поиск</button>\r\n                </form>\r\n                <section className=\"elements\">\r\n                    {filteredCards.map (card => {\r\n                        return <MoviesCard \r\n                            onCardClick = {onCardClick} onCardLike = {onCardLike}\r\n                            onCardDelete ={onCardDelete} card={card} key = {card.id}/>\r\n                    })}\r\n                </section>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Movies;"]},"metadata":{},"sourceType":"module"}